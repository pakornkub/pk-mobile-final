{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useControlledState as $fQ2SF$useControlledState } from \"@react-stately/utils\";\nimport { useMemo as $fQ2SF$useMemo, useState as $fQ2SF$useState } from \"react\";\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $a54cdc5c1942b639$exports = {};\n$parcel$export($a54cdc5c1942b639$exports, \"useRadioGroupState\", function () {\n  return $a54cdc5c1942b639$export$bca9d026f8e704eb;\n});\nvar $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 10000000000);\nvar $a54cdc5c1942b639$var$i = 0;\nfunction $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {\n  var name = $fQ2SF$useMemo(function () {\n    return props.name || \"radio-group-\" + $a54cdc5c1942b639$var$instance + \"-\" + ++$a54cdc5c1942b639$var$i;\n  }, [props.name]);\n  var _$fQ2SF$useControlled = $fQ2SF$useControlledState(props.value, props.defaultValue, props.onChange),\n    _$fQ2SF$useControlled2 = _slicedToArray(_$fQ2SF$useControlled, 2),\n    selectedValue = _$fQ2SF$useControlled2[0],\n    setSelected = _$fQ2SF$useControlled2[1];\n  var _$fQ2SF$useState = $fQ2SF$useState(null),\n    _$fQ2SF$useState2 = _slicedToArray(_$fQ2SF$useState, 2),\n    lastFocusedValue = _$fQ2SF$useState2[0],\n    setLastFocusedValue = _$fQ2SF$useState2[1];\n  var setSelectedValue = function setSelectedValue(value) {\n    if (!props.isReadOnly && !props.isDisabled) setSelected(value);\n  };\n  return {\n    name: name,\n    selectedValue: selectedValue,\n    setSelectedValue: setSelectedValue,\n    lastFocusedValue: lastFocusedValue,\n    setLastFocusedValue: setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false\n  };\n}\nexport { $a54cdc5c1942b639$export$bca9d026f8e704eb as useRadioGroupState };","map":{"version":3,"names":["$a54cdc5c1942b639$var$instance","Math","round","random","$a54cdc5c1942b639$var$i","$a54cdc5c1942b639$export$bca9d026f8e704eb","props","name","$fQ2SF$useMemo","_$fQ2SF$useControlled","$fQ2SF$useControlledState","value","defaultValue","onChange","_$fQ2SF$useControlled2","_slicedToArray","selectedValue","setSelected","_$fQ2SF$useState","$fQ2SF$useState","_$fQ2SF$useState2","lastFocusedValue","setLastFocusedValue","setSelectedValue","isReadOnly","isDisabled"],"sources":["D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-stately\\radio\\dist\\packages\\@react-stately\\radio\\src\\index.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-stately\\radio\\dist\\packages\\@react-stately\\radio\\src\\useRadioGroupState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useRadioGroupState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RadioGroupProps} from '@react-types/radio';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo, useState} from 'react';\n\nexport interface RadioGroupState {\n  /**\n   * The name for the group, used for native form submission.\n   * @deprecated\n   * @private\n   */\n  readonly name: string,\n\n  /** Whether the radio group is disabled. */\n  readonly isDisabled: boolean,\n\n  /** Whether the radio group is read only. */\n  readonly isReadOnly: boolean,\n\n  /** The currently selected value. */\n  readonly selectedValue: string | null,\n\n  /** Sets the selected value. */\n  setSelectedValue(value: string): void,\n\n  /** The value of the last focused radio. */\n  readonly lastFocusedValue: string | null,\n\n  /** Sets the last focused value. */\n  setLastFocusedValue(value: string): void\n}\n\nlet instance = Math.round(Math.random() * 10000000000);\nlet i = 0;\n\n/**\n * Provides state management for a radio group component. Provides a name for the group,\n * and manages selection and focus state.\n */\nexport function useRadioGroupState(props: RadioGroupProps): RadioGroupState  {\n  // Preserved here for backward compatibility. React Aria now generates the name instead of stately.\n  let name = useMemo(() => props.name || `radio-group-${instance}-${++i}`, [props.name]);\n  let [selectedValue, setSelected] = useControlledState(props.value, props.defaultValue, props.onChange);\n  let [lastFocusedValue, setLastFocusedValue] = useState(null);\n\n  let setSelectedValue = (value) => {\n    if (!props.isReadOnly && !props.isDisabled) {\n      setSelected(value);\n    }\n  };\n\n  return {\n    name,\n    selectedValue,\n    setSelectedValue,\n    lastFocusedValue,\n    setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;AC2CA,IAAIA,8BAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,KAAK,WAAW;AACrD,IAAIC,uBAAC,GAAG,CAAC;SAMOC,yCAAkBA,CAACC,KAAsB,EAAoB;EAE3E,IAAIC,IAAI,GAAGC,cAAO;IAAA,OAAOF,KAAK,CAACC,IAAI,qBAAmBP,8BAAQ,SAAE,EAAII,uBAAC;EAAA,GAAI,CAACE,KAAK,CAACC,IAAI,CAAC;EACrF,IAAAE,qBAAA,GAAmCC,yBAAkB,CAACJ,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,YAAY,EAAEN,KAAK,CAACO,QAAQ;IAAAC,sBAAA,GAAAC,cAAA,CAAAN,qBAAA;IAAhGO,aAAa,GAAAF,sBAAA;IAAEG,WAAW,GAAAH,sBAAA;EAC/B,IAAAI,gBAAA,GAA8CC,eAAQ,CAAC,IAAI;IAAAC,iBAAA,GAAAL,cAAA,CAAAG,gBAAA;IAAtDG,gBAAgB,GAAAD,iBAAA;IAAEE,mBAAmB,GAAAF,iBAAA;EAE1C,IAAIG,gBAAgB,YAAhBA,gBAAgBA,CAAIZ,KAAK,EAAK;IAChC,IAAE,CAAGL,KAAK,CAACkB,UAAU,KAAKlB,KAAK,CAACmB,UAAU,EACxCR,WAAW,CAACN,KAAK;EAErB,CAAC;EAED,OAAO;UACLJ,IAAI;mBACJS,aAAa;sBACbO,gBAAgB;sBAChBF,gBAAgB;yBAChBC,mBAAmB;IACnBG,UAAU,EAAEnB,KAAK,CAACmB,UAAU,IAAI,KAAK;IACrCD,UAAU,EAAElB,KAAK,CAACkB,UAAU,IAAI;EAClC,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}