{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { httpClient } from \"../services/axios\";\nexport var useJobRecheck = function useJobRecheck() {\n  var getJobRecheck = function () {\n    var _ref = _asyncToGenerator(function* () {\n      return yield httpClient.get('/job_recheck');\n    });\n    return function getJobRecheck() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return useQuery(\"JobRecheck\", function () {\n    return getJobRecheck();\n  }, {\n    enabled: true,\n    refetchOnWindowFocus: true,\n    refetchOnMount: true\n  });\n};\nexport var useJobRecheckBOM = function useJobRecheckBOM(_ref2) {\n  var JOB_ID = _ref2.JOB_ID;\n  var getJobRecheckBOM = function () {\n    var _ref3 = _asyncToGenerator(function* (JOB_ID) {\n      return yield httpClient.get(\"/job_recheck_bom?JOB_ID=\" + JOB_ID);\n    });\n    return function getJobRecheckBOM(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return useQuery([\"JobRecheckBOM\", JOB_ID], function () {\n    return getJobRecheckBOM(JOB_ID);\n  }, {\n    enabled: true\n  });\n};\nexport var useExecJobRecheckItem = function useExecJobRecheckItem() {\n  var queryClient = useQueryClient();\n  var execJobRecheckItem = function () {\n    var _ref4 = _asyncToGenerator(function* (params) {\n      var data = new FormData();\n      Object.keys(params).forEach(function (value) {\n        data.append(value, params[value] || \"\");\n      });\n      return yield httpClient.post(\"/exec_job_recheck_item\", data);\n    });\n    return function execJobRecheckItem(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return useMutation(\"ExecJobRecheckItem\", function (params) {\n    return execJobRecheckItem(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('JobRecheckBOM');\n    },\n    onError: function onError(error) {\n      var _error$response, _error$response$data;\n      console.log((error == null ? void 0 : (_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || error.message);\n    }\n  });\n};\nexport var useExecJobRecheckTransactions = function useExecJobRecheckTransactions() {\n  var queryClient = useQueryClient();\n  var execJobRecheckTransactions = function () {\n    var _ref5 = _asyncToGenerator(function* (params) {\n      var data = new FormData();\n      Object.keys(params).forEach(function (value) {\n        data.append(value, params[value] || \"\");\n      });\n      return yield httpClient.post(\"/exec_job_recheck_transaction\", data);\n    });\n    return function execJobRecheckTransactions(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return useMutation(\"ExecJobRecheckTransactions\", function (params) {\n    return execJobRecheckTransactions(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('JobRecheck');\n    },\n    onError: function onError(error) {\n      var _error$response2, _error$response2$data;\n      console.log((error == null ? void 0 : (_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || error.message);\n    }\n  });\n};\nexport var useUpdateJobRecheck = function useUpdateJobRecheck() {\n  var queryClient = useQueryClient();\n  var updateJobRecheck = function () {\n    var _ref6 = _asyncToGenerator(function* (params) {\n      var data = new FormData();\n      Object.keys(params).forEach(function (value) {\n        data.append(value, params[value] || \"\");\n      });\n      return yield httpClient.post(\"/update_job_recheck\", data);\n    });\n    return function updateJobRecheck(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return useMutation(\"UpdateJobRecheck\", function (params) {\n    return updateJobRecheck(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('JobRecheck');\n    },\n    onError: function onError(error) {\n      var _error$response3, _error$response3$data;\n      console.log((error == null ? void 0 : (_error$response3 = error.response) == null ? void 0 : (_error$response3$data = _error$response3.data) == null ? void 0 : _error$response3$data.message) || error.message);\n    }\n  });\n};","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","httpClient","useJobRecheck","getJobRecheck","_ref","_asyncToGenerator","get","apply","arguments","enabled","refetchOnWindowFocus","refetchOnMount","useJobRecheckBOM","_ref2","JOB_ID","getJobRecheckBOM","_ref3","_x","useExecJobRecheckItem","queryClient","execJobRecheckItem","_ref4","params","data","FormData","Object","keys","forEach","value","append","post","_x2","onSuccess","response","invalidateQueries","onError","error","_error$response","_error$response$data","console","log","message","useExecJobRecheckTransactions","execJobRecheckTransactions","_ref5","_x3","_error$response2","_error$response2$data","useUpdateJobRecheck","updateJobRecheck","_ref6","_x4","_error$response3","_error$response3$data"],"sources":["D:/_Dev/expo/pk-mobile/src/hooks/useJobRecheck.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport { httpClient } from \"../services/axios\";\r\n\r\nexport const useJobRecheck = () => {\r\n  const getJobRecheck = async () => {\r\n    return await httpClient.get('/job_recheck');\r\n  };\r\n  return useQuery(\r\n    \"JobRecheck\",\r\n    () => getJobRecheck(),\r\n    {\r\n      enabled: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      //staleTime: 30000, // not to refresh the data from API is 30 seconds\r\n    }\r\n  );\r\n};\r\n\r\nexport const useJobRecheckBOM = ({JOB_ID}: any) => {\r\n\r\n  const getJobRecheckBOM = async (JOB_ID: any) => {\r\n    \r\n    return await httpClient.get(`/job_recheck_bom?JOB_ID=${JOB_ID}`);\r\n  };\r\n  return useQuery<any, any, any>(\r\n    [\"JobRecheckBOM\", JOB_ID],\r\n    () => getJobRecheckBOM(JOB_ID),\r\n    {\r\n      enabled: true,\r\n    }\r\n  );\r\n};\r\n\r\nexport const useExecJobRecheckItem = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const execJobRecheckItem = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/exec_job_recheck_item\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"ExecJobRecheckItem\",\r\n    (params) => execJobRecheckItem(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('JobRecheckBOM');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const useExecJobRecheckTransactions = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const execJobRecheckTransactions = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/exec_job_recheck_transaction\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"ExecJobRecheckTransactions\",\r\n    (params) => execJobRecheckTransactions(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('JobRecheck');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const useUpdateJobRecheck = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const updateJobRecheck = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/update_job_recheck\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"UpdateJobRecheck\",\r\n    (params) => updateJobRecheck(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('JobRecheck');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}