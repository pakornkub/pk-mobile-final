{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _excluded = [\"register\"],\n  _excluded2 = [\"onPress\", \"onPressChange\", \"onPressStart\", \"onPressEnd\", \"onPressUp\", \"isDisabled\", \"isPressed\", \"preventFocusOnPress\", \"shouldCancelOnPointerExit\", \"allowTextSelectionOnPress\", \"ref\"],\n  _excluded3 = [\"children\"],\n  _excluded4 = [\"children\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mergeProps as $bx7SL$mergeProps, useSyncRef as $bx7SL$useSyncRef, useGlobalListeners as $bx7SL$useGlobalListeners, focusWithoutScrolling as $bx7SL$focusWithoutScrolling, isIOS as $bx7SL$isIOS, runAfterTransition as $bx7SL$runAfterTransition, useLayoutEffect as $bx7SL$useLayoutEffect, isMac as $bx7SL$isMac, useEvent as $bx7SL$useEvent, useDescription as $bx7SL$useDescription } from \"@react-aria/utils\";\nimport $bx7SL$react, { useRef as $bx7SL$useRef, useContext as $bx7SL$useContext, useState as $bx7SL$useState, useMemo as $bx7SL$useMemo, useEffect as $bx7SL$useEffect, useCallback as $bx7SL$useCallback } from \"react\";\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $3b117e43dc0ca95d$exports = {};\n$parcel$export($3b117e43dc0ca95d$exports, \"Pressable\", function () {\n  return $3b117e43dc0ca95d$export$27c701ed9e449e99;\n});\nvar $f6c31cce2adf654f$exports = {};\n$parcel$export($f6c31cce2adf654f$exports, \"usePress\", function () {\n  return $f6c31cce2adf654f$export$45712eceda6fad21;\n});\nvar $14c0b72509d70225$var$state = 'default';\nvar $14c0b72509d70225$var$savedUserSelect = '';\nvar $14c0b72509d70225$var$modifiedElementMap = new WeakMap();\nfunction $14c0b72509d70225$export$16a4697467175487(target) {\n  if ($bx7SL$isIOS()) {\n    if ($14c0b72509d70225$var$state === 'default') {\n      $14c0b72509d70225$var$savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    }\n    $14c0b72509d70225$var$state = 'disabled';\n  } else if (target) {\n    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\nfunction $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {\n  if ($bx7SL$isIOS()) {\n    if ($14c0b72509d70225$var$state !== 'disabled') return;\n    $14c0b72509d70225$var$state = 'restoring';\n    setTimeout(function () {\n      $bx7SL$runAfterTransition(function () {\n        if ($14c0b72509d70225$var$state === 'restoring') {\n          if (document.documentElement.style.webkitUserSelect === 'none') document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || '';\n          $14c0b72509d70225$var$savedUserSelect = '';\n          $14c0b72509d70225$var$state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {\n      var targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);\n      if (target.style.userSelect === 'none') target.style.userSelect = targetOldUserSelect;\n      if (target.getAttribute('style') === '') target.removeAttribute('style');\n      $14c0b72509d70225$var$modifiedElementMap.delete(target);\n    }\n}\nfunction $8a9cb279dc87e130$export$60278871457622de(event) {\n  if (event.mozInputSource === 0 && event.isTrusted) return true;\n  return event.detail === 0 && !event.pointerType;\n}\nvar $8a9cb279dc87e130$export$905e7fc544a71f36 = function () {\n  function $8a9cb279dc87e130$export$905e7fc544a71f36(type, nativeEvent) {\n    _classCallCheck(this, $8a9cb279dc87e130$export$905e7fc544a71f36);\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target;\n    this.currentTarget = nativeEvent.currentTarget;\n    this.relatedTarget = nativeEvent.relatedTarget;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n  _createClass($8a9cb279dc87e130$export$905e7fc544a71f36, [{\n    key: \"isDefaultPrevented\",\n    value: function isDefaultPrevented() {\n      return this.nativeEvent.defaultPrevented;\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.defaultPrevented = true;\n      this.nativeEvent.preventDefault();\n    }\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.nativeEvent.stopPropagation();\n      this.isPropagationStopped = function () {\n        return true;\n      };\n    }\n  }, {\n    key: \"isPropagationStopped\",\n    value: function isPropagationStopped() {\n      return false;\n    }\n  }, {\n    key: \"persist\",\n    value: function persist() {}\n  }]);\n  return $8a9cb279dc87e130$export$905e7fc544a71f36;\n}();\nfunction $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {\n  var stateRef = $bx7SL$useRef({\n    isFocused: false,\n    onBlur: onBlur,\n    observer: null\n  });\n  stateRef.current.onBlur = onBlur;\n  $bx7SL$useLayoutEffect(function () {\n    var state = stateRef.current;\n    return function () {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n  return $bx7SL$useCallback(function (e1) {\n    if (e1.target instanceof HTMLButtonElement || e1.target instanceof HTMLInputElement || e1.target instanceof HTMLTextAreaElement || e1.target instanceof HTMLSelectElement) {\n      stateRef.current.isFocused = true;\n      var target = e1.target;\n      var onBlurHandler = function onBlurHandler(e) {\n        var _current, ref;\n        stateRef.current.isFocused = false;\n        if (target.disabled) (ref = (_current = stateRef.current).onBlur) === null || ref === void 0 ? void 0 : ref.call(_current, new $8a9cb279dc87e130$export$905e7fc544a71f36('blur', e));\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n      target.addEventListener('focusout', onBlurHandler, {\n        once: true\n      });\n      stateRef.current.observer = new MutationObserver(function () {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          target.dispatchEvent(new FocusEvent('blur'));\n          target.dispatchEvent(new FocusEvent('focusout', {\n            bubbles: true\n          }));\n        }\n      });\n      stateRef.current.observer.observe(target, {\n        attributes: true,\n        attributeFilter: ['disabled']\n      });\n    }\n  }, []);\n}\nvar $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = $bx7SL$react.createContext(null);\n$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = 'PressResponderContext';\nfunction $f6c31cce2adf654f$var$usePressResponderContext(props) {\n  var context = $bx7SL$useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5);\n  if (context) {\n    var register = context.register,\n      contextProps = _objectWithoutProperties(context, _excluded);\n    props = $bx7SL$mergeProps(contextProps, props);\n    register();\n  }\n  $bx7SL$useSyncRef(context, props.ref);\n  return props;\n}\nfunction $f6c31cce2adf654f$export$45712eceda6fad21(props) {\n  var _$f6c31cce2adf654f$va = $f6c31cce2adf654f$var$usePressResponderContext(props),\n    onPress1 = _$f6c31cce2adf654f$va.onPress,\n    onPressChange1 = _$f6c31cce2adf654f$va.onPressChange,\n    onPressStart1 = _$f6c31cce2adf654f$va.onPressStart,\n    onPressEnd1 = _$f6c31cce2adf654f$va.onPressEnd,\n    onPressUp1 = _$f6c31cce2adf654f$va.onPressUp,\n    isDisabled1 = _$f6c31cce2adf654f$va.isDisabled,\n    isPressedProp = _$f6c31cce2adf654f$va.isPressed,\n    preventFocusOnPress = _$f6c31cce2adf654f$va.preventFocusOnPress,\n    shouldCancelOnPointerExit = _$f6c31cce2adf654f$va.shouldCancelOnPointerExit,\n    allowTextSelectionOnPress = _$f6c31cce2adf654f$va.allowTextSelectionOnPress,\n    _ = _$f6c31cce2adf654f$va.ref,\n    domProps = _objectWithoutProperties(_$f6c31cce2adf654f$va, _excluded2);\n  var propsRef = $bx7SL$useRef(null);\n  propsRef.current = {\n    onPress: onPress1,\n    onPressChange: onPressChange1,\n    onPressStart: onPressStart1,\n    onPressEnd: onPressEnd1,\n    onPressUp: onPressUp1,\n    isDisabled: isDisabled1,\n    shouldCancelOnPointerExit: shouldCancelOnPointerExit\n  };\n  var _$bx7SL$useState = $bx7SL$useState(false),\n    _$bx7SL$useState2 = _slicedToArray(_$bx7SL$useState, 2),\n    isPressed = _$bx7SL$useState2[0],\n    setPressed = _$bx7SL$useState2[1];\n  var ref = $bx7SL$useRef({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n  var _$bx7SL$useGlobalList = $bx7SL$useGlobalListeners(),\n    addGlobalListener = _$bx7SL$useGlobalList.addGlobalListener,\n    removeAllGlobalListeners = _$bx7SL$useGlobalList.removeAllGlobalListeners;\n  var pressProps1 = $bx7SL$useMemo(function () {\n    var state = ref.current;\n    var triggerPressStart = function triggerPressStart(originalEvent, pointerType) {\n      var _propsRef$current = propsRef.current,\n        onPressStart = _propsRef$current.onPressStart,\n        onPressChange = _propsRef$current.onPressChange,\n        isDisabled = _propsRef$current.isDisabled;\n      if (isDisabled || state.didFirePressStart) return;\n      if (onPressStart) onPressStart({\n        type: 'pressstart',\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n      if (onPressChange) onPressChange(true);\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n    var triggerPressEnd = function triggerPressEnd(originalEvent, pointerType) {\n      var wasPressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var _propsRef$current2 = propsRef.current,\n        onPressEnd = _propsRef$current2.onPressEnd,\n        onPressChange = _propsRef$current2.onPressChange,\n        onPress = _propsRef$current2.onPress,\n        isDisabled = _propsRef$current2.isDisabled;\n      if (!state.didFirePressStart) return;\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n      if (onPressEnd) onPressEnd({\n        type: 'pressend',\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n      if (onPressChange) onPressChange(false);\n      setPressed(false);\n      if (onPress && wasPressed && !isDisabled) onPress({\n        type: 'press',\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    var triggerPressUp = function triggerPressUp(originalEvent, pointerType) {\n      var _propsRef$current3 = propsRef.current,\n        onPressUp = _propsRef$current3.onPressUp,\n        isDisabled = _propsRef$current3.isDisabled;\n      if (isDisabled) return;\n      if (onPressUp) onPressUp({\n        type: 'pressup',\n        pointerType: pointerType,\n        target: originalEvent.currentTarget,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    var cancel = function cancel(e) {\n      if (state.isPressed) {\n        if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);\n      }\n    };\n    var pressProps = {\n      onKeyDown: function onKeyDown(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent) && e.currentTarget.contains(e.target)) {\n          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target)) e.preventDefault();\n          e.stopPropagation();\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        }\n      },\n      onKeyUp: function onKeyUp(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent) && !e.repeat && e.currentTarget.contains(e.target)) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e), 'keyboard');\n      },\n      onClick: function onClick(e) {\n        if (e && !e.currentTarget.contains(e.target)) return;\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled1) e.preventDefault();\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || $8a9cb279dc87e130$export$60278871457622de(e.nativeEvent))) {\n            if (!isDisabled1 && !preventFocusOnPress) $bx7SL$focusWithoutScrolling(e.currentTarget);\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n    var onKeyUp = function onKeyUp(e) {\n      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent(e)) {\n        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target)) e.preventDefault();\n        e.stopPropagation();\n        state.isPressed = false;\n        var target = e.target;\n        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n        if (state.target.contains(target) && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link') state.target.click();\n      }\n    };\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ($f6c31cce2adf654f$var$isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        state.pointerType = e.pointerType;\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n          if (!isDisabled1 && !preventFocusOnPress) $bx7SL$focusWithoutScrolling(e.currentTarget);\n          if (!allowTextSelectionOnPress) $14c0b72509d70225$export$16a4697467175487(state.target);\n          triggerPressStart(e, state.pointerType);\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n      pressProps.onMouseDown = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (e.button === 0) {\n          if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n          e.stopPropagation();\n        }\n      };\n      pressProps.onPointerUp = function (e) {\n        if (!e.currentTarget.contains(e.target) || state.pointerType === 'virtual') return;\n        if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);\n      };\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId !== state.activePointerId) return;\n        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);\n        }\n      };\n      var onPointerCancel = function onPointerCancel(e) {\n        cancel(e);\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) return;\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = $8a9cb279dc87e130$export$60278871457622de(e.nativeEvent) ? 'virtual' : 'mouse';\n        if (!isDisabled1 && !preventFocusOnPress) $bx7SL$focusWithoutScrolling(e.currentTarget);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n      pressProps.onMouseEnter = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n      pressProps.onMouseLeave = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n      pressProps.onMouseUp = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType);\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button !== 0) return;\n        state.isPressed = false;\n        removeAllGlobalListeners();\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n        state.isOverTarget = false;\n      };\n      pressProps.onTouchStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        var touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);\n        if (!touch) return;\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n        if (!isDisabled1 && !preventFocusOnPress) $bx7SL$focusWithoutScrolling(e.currentTarget);\n        if (!allowTextSelectionOnPress) $14c0b72509d70225$export$16a4697467175487(state.target);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n      pressProps.onTouchMove = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n        }\n      };\n      pressProps.onTouchEnd = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) triggerPressEnd(e, state.pointerType, false);\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);\n        removeAllGlobalListeners();\n      };\n      pressProps.onTouchCancel = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed) cancel(e);\n      };\n      var onScroll = function onScroll(e) {\n        if (state.isPressed && e.target.contains(state.target)) cancel({\n          currentTarget: state.target,\n          shiftKey: false,\n          ctrlKey: false,\n          metaKey: false,\n          altKey: false\n        });\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    }\n    return pressProps;\n  }, [addGlobalListener, isDisabled1, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n  $bx7SL$useEffect(function () {\n    return function () {\n      if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(ref.current.target);\n    };\n  }, [allowTextSelectionOnPress]);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: $bx7SL$mergeProps(domProps, pressProps1)\n  };\n}\nfunction $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\nfunction $f6c31cce2adf654f$var$isValidKeyboardEvent(event) {\n  var key = event.key,\n    code = event.code,\n    target = event.target;\n  var element = target;\n  var tagName = element.tagName,\n    isContentEditable = element.isContentEditable;\n  var role = element.getAttribute('role');\n  return (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') && tagName !== 'INPUT' && tagName !== 'TEXTAREA' && isContentEditable !== true && (!$f6c31cce2adf654f$var$isHTMLAnchorLink(element) || role === 'button' && key !== 'Enter') && !(role === 'link' && key !== 'Enter');\n}\nfunction $f6c31cce2adf654f$var$getTouchFromEvent(event) {\n  var targetTouches = event.targetTouches;\n  if (targetTouches.length > 0) return targetTouches[0];\n  return null;\n}\nfunction $f6c31cce2adf654f$var$getTouchById(event, pointerId) {\n  var changedTouches = event.changedTouches;\n  for (var i = 0; i < changedTouches.length; i++) {\n    var touch = changedTouches[i];\n    if (touch.identifier === pointerId) return touch;\n  }\n  return null;\n}\nfunction $f6c31cce2adf654f$var$createEvent(target, e) {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\nfunction $f6c31cce2adf654f$var$getPointClientRect(point) {\n  var offsetX = point.width / 2 || point.radiusX || 0;\n  var offsetY = point.height / 2 || point.radiusY || 0;\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\nfunction $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {\n  if (a.left > b.right || b.left > a.right) return false;\n  if (a.top > b.bottom || b.top > a.bottom) return false;\n  return true;\n}\nfunction $f6c31cce2adf654f$var$isOverTarget(point, target) {\n  var rect = target.getBoundingClientRect();\n  var pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);\n  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefault(target) {\n  return !target.draggable;\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target) {\n  return !((target.tagName === 'INPUT' || target.tagName === 'BUTTON') && target.type === 'submit');\n}\nfunction $f6c31cce2adf654f$var$isVirtualPointerEvent(event) {\n  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'mouse';\n}\nvar $3b117e43dc0ca95d$export$27c701ed9e449e99 = $bx7SL$react.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded3);\n  var newRef = $bx7SL$useRef();\n  ref = ref !== null && ref !== void 0 ? ref : newRef;\n  var _$f6c31cce2adf654f$ex = $f6c31cce2adf654f$export$45712eceda6fad21(_objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })),\n    pressProps = _$f6c31cce2adf654f$ex.pressProps;\n  var child = $bx7SL$react.Children.only(children);\n  return $bx7SL$react.cloneElement(child, _objectSpread({\n    ref: ref\n  }, $bx7SL$mergeProps(child.props, pressProps)));\n});\nvar $f1ab8c75478c6f73$exports = {};\n$parcel$export($f1ab8c75478c6f73$exports, \"PressResponder\", function () {\n  return $f1ab8c75478c6f73$export$3351871ee4b288b8;\n});\nvar $f1ab8c75478c6f73$export$3351871ee4b288b8 = $bx7SL$react.forwardRef(function (_ref2, ref) {\n  var children = _ref2.children,\n    props = _objectWithoutProperties(_ref2, _excluded4);\n  var isRegistered = $bx7SL$useRef(false);\n  var prevContext = $bx7SL$useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5);\n  var context = $bx7SL$mergeProps(prevContext || {}, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),\n    register: function register() {\n      isRegistered.current = true;\n      if (prevContext) prevContext.register();\n    }\n  }));\n  $bx7SL$useSyncRef(prevContext, ref);\n  $bx7SL$useEffect(function () {\n    if (!isRegistered.current) console.warn(\"A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.\");\n  }, []);\n  return $bx7SL$react.createElement($ae1eeba8b9eafd08$export$5165eccb35aaadb5.Provider, {\n    value: context\n  }, children);\n});\nvar $a1ea59d68270f0dd$exports = {};\n$parcel$export($a1ea59d68270f0dd$exports, \"useFocus\", function () {\n  return $a1ea59d68270f0dd$export$f8168d8dd8fd66e6;\n});\nfunction $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {\n  var isDisabled = props.isDisabled,\n    onFocusProp = props.onFocus,\n    onBlurProp = props.onBlur,\n    onFocusChange = props.onFocusChange;\n  var onBlur = $bx7SL$useCallback(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) onBlurProp(e);\n      if (onFocusChange) onFocusChange(false);\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n  var onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);\n  var onFocus = $bx7SL$useCallback(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) onFocusProp(e);\n      if (onFocusChange) onFocusChange(true);\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n  return {\n    focusProps: {\n      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : undefined,\n      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : null\n    }\n  };\n}\nvar $507fabe10e71c6fb$exports = {};\n$parcel$export($507fabe10e71c6fb$exports, \"isFocusVisible\", function () {\n  return $507fabe10e71c6fb$export$b9b3dfddab17db27;\n});\n$parcel$export($507fabe10e71c6fb$exports, \"getInteractionModality\", function () {\n  return $507fabe10e71c6fb$export$630ff653c5ada6a9;\n});\n$parcel$export($507fabe10e71c6fb$exports, \"setInteractionModality\", function () {\n  return $507fabe10e71c6fb$export$8397ddfc504fdb9a;\n});\n$parcel$export($507fabe10e71c6fb$exports, \"useInteractionModality\", function () {\n  return $507fabe10e71c6fb$export$98e20ec92f614cfe;\n});\n$parcel$export($507fabe10e71c6fb$exports, \"useFocusVisible\", function () {\n  return $507fabe10e71c6fb$export$ffd9e5021c1fb2d6;\n});\n$parcel$export($507fabe10e71c6fb$exports, \"useFocusVisibleListener\", function () {\n  return $507fabe10e71c6fb$export$ec71b4b83ac08ec3;\n});\nvar $507fabe10e71c6fb$var$currentModality = null;\nvar $507fabe10e71c6fb$var$changeHandlers = new Set();\nvar $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;\nvar $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\nvar $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\nvar $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {\n  for (var handler of $507fabe10e71c6fb$var$changeHandlers) handler(modality, e);\n}\nfunction $507fabe10e71c6fb$var$isValidKey(e) {\n  return !(e.metaKey || !$bx7SL$isMac() && e.altKey || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\nfunction $507fabe10e71c6fb$var$handleKeyboardEvent(e) {\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n  if ($507fabe10e71c6fb$var$isValidKey(e)) {\n    $507fabe10e71c6fb$var$currentModality = 'keyboard';\n    $507fabe10e71c6fb$var$triggerChangeHandlers('keyboard', e);\n  }\n}\nfunction $507fabe10e71c6fb$var$handlePointerEvent(e) {\n  $507fabe10e71c6fb$var$currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$triggerChangeHandlers('pointer', e);\n  }\n}\nfunction $507fabe10e71c6fb$var$handleClickEvent(e) {\n  if ($8a9cb279dc87e130$export$60278871457622de(e)) {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$currentModality = 'virtual';\n  }\n}\nfunction $507fabe10e71c6fb$var$handleFocusEvent(e) {\n  if (e.target === window || e.target === document) return;\n  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {\n    $507fabe10e71c6fb$var$currentModality = 'virtual';\n    $507fabe10e71c6fb$var$triggerChangeHandlers('virtual', e);\n  }\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\n}\nfunction $507fabe10e71c6fb$var$handleWindowBlur() {\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;\n}\nfunction $507fabe10e71c6fb$var$setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || $507fabe10e71c6fb$var$hasSetupGlobalListeners) return;\n  var focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n  document.addEventListener('keydown', $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener('keyup', $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener('click', $507fabe10e71c6fb$var$handleClickEvent, true);\n  window.addEventListener('focus', $507fabe10e71c6fb$var$handleFocusEvent, true);\n  window.addEventListener('blur', $507fabe10e71c6fb$var$handleWindowBlur, false);\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener('pointermove', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener('pointerup', $507fabe10e71c6fb$var$handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener('mousemove', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener('mouseup', $507fabe10e71c6fb$var$handlePointerEvent, true);\n  }\n  $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;\n}\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') $507fabe10e71c6fb$var$setupGlobalFocusEvents();else document.addEventListener('DOMContentLoaded', $507fabe10e71c6fb$var$setupGlobalFocusEvents);\n}\nfunction $507fabe10e71c6fb$export$b9b3dfddab17db27() {\n  return $507fabe10e71c6fb$var$currentModality !== 'pointer';\n}\nfunction $507fabe10e71c6fb$export$630ff653c5ada6a9() {\n  return $507fabe10e71c6fb$var$currentModality;\n}\nfunction $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {\n  $507fabe10e71c6fb$var$currentModality = modality;\n  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);\n}\nfunction $507fabe10e71c6fb$export$98e20ec92f614cfe() {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n  var _$bx7SL$useState3 = $bx7SL$useState($507fabe10e71c6fb$var$currentModality),\n    _$bx7SL$useState4 = _slicedToArray(_$bx7SL$useState3, 2),\n    modality = _$bx7SL$useState4[0],\n    setModality = _$bx7SL$useState4[1];\n  $bx7SL$useEffect(function () {\n    var handler = function handler() {\n      setModality($507fabe10e71c6fb$var$currentModality);\n    };\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n  }, []);\n  return modality;\n}\nfunction $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\nfunction $507fabe10e71c6fb$export$ffd9e5021c1fb2d6() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isTextInput = props.isTextInput,\n    autoFocus = props.autoFocus;\n  var _$bx7SL$useState5 = $bx7SL$useState(autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27()),\n    _$bx7SL$useState6 = _slicedToArray(_$bx7SL$useState5, 2),\n    isFocusVisibleState = _$bx7SL$useState6[0],\n    setFocusVisible = _$bx7SL$useState6[1];\n  $507fabe10e71c6fb$export$ec71b4b83ac08ec3(function ($507fabe10e71c6fb$export$b9b3dfddab17db27) {\n    setFocusVisible($507fabe10e71c6fb$export$b9b3dfddab17db27);\n  }, [isTextInput], {\n    isTextInput: isTextInput\n  });\n  return {\n    isFocusVisible: isFocusVisibleState\n  };\n}\nfunction $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n  $bx7SL$useEffect(function () {\n    var handler = function handler(modality, e) {\n      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e)) return;\n      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());\n    };\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n  }, deps);\n}\nvar $9ab94262bd0047c7$exports = {};\n$parcel$export($9ab94262bd0047c7$exports, \"useFocusWithin\", function () {\n  return $9ab94262bd0047c7$export$420e68273165f4ec;\n});\nfunction $9ab94262bd0047c7$export$420e68273165f4ec(props) {\n  var isDisabled = props.isDisabled,\n    onBlurWithin = props.onBlurWithin,\n    onFocusWithin = props.onFocusWithin,\n    onFocusWithinChange = props.onFocusWithinChange;\n  var state = $bx7SL$useRef({\n    isFocusWithin: false\n  });\n  var onBlur = $bx7SL$useCallback(function (e) {\n    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {\n      state.current.isFocusWithin = false;\n      if (onBlurWithin) onBlurWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(false);\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n  var onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);\n  var onFocus = $bx7SL$useCallback(function (e) {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) onFocusWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(true);\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n  if (isDisabled) return {\n    focusWithinProps: {\n      onFocus: null,\n      onBlur: null\n    }\n  };\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\nvar $6179b936705e76d3$exports = {};\n$parcel$export($6179b936705e76d3$exports, \"useHover\", function () {\n  return $6179b936705e76d3$export$ae780daf29e6d456;\n});\nvar $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\nvar $6179b936705e76d3$var$hoverCount = 0;\nfunction $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {\n  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;\n  setTimeout(function () {\n    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\nfunction $6179b936705e76d3$var$handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();\n}\nfunction $6179b936705e76d3$var$setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') return;\n  if (typeof PointerEvent !== 'undefined') document.addEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);else document.addEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  $6179b936705e76d3$var$hoverCount++;\n  return function () {\n    $6179b936705e76d3$var$hoverCount--;\n    if ($6179b936705e76d3$var$hoverCount > 0) return;\n    if (typeof PointerEvent !== 'undefined') document.removeEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);else document.removeEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  };\n}\nfunction $6179b936705e76d3$export$ae780daf29e6d456(props) {\n  var onHoverStart = props.onHoverStart,\n    onHoverChange = props.onHoverChange,\n    onHoverEnd = props.onHoverEnd,\n    isDisabled = props.isDisabled;\n  var _$bx7SL$useState7 = $bx7SL$useState(false),\n    _$bx7SL$useState8 = _slicedToArray(_$bx7SL$useState7, 2),\n    isHovered = _$bx7SL$useState8[0],\n    setHovered = _$bx7SL$useState8[1];\n  var state = $bx7SL$useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n  $bx7SL$useEffect($6179b936705e76d3$var$setupGlobalTouchEvents, []);\n  var _$bx7SL$useMemo = $bx7SL$useMemo(function () {\n      var triggerHoverStart = function triggerHoverStart(event, pointerType) {\n        state.pointerType = pointerType;\n        if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) return;\n        state.isHovered = true;\n        var target = event.currentTarget;\n        state.target = target;\n        if (onHoverStart) onHoverStart({\n          type: 'hoverstart',\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(true);\n        setHovered(true);\n      };\n      var triggerHoverEnd = function triggerHoverEnd(event, pointerType) {\n        state.pointerType = '';\n        state.target = null;\n        if (pointerType === 'touch' || !state.isHovered) return;\n        state.isHovered = false;\n        var target = event.currentTarget;\n        if (onHoverEnd) onHoverEnd({\n          type: 'hoverend',\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(false);\n        setHovered(false);\n      };\n      var hoverProps = {};\n      if (typeof PointerEvent !== 'undefined') {\n        hoverProps.onPointerEnter = function (e) {\n          if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') return;\n          triggerHoverStart(e, e.pointerType);\n        };\n        hoverProps.onPointerLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, e.pointerType);\n        };\n      } else {\n        hoverProps.onTouchStart = function () {\n          state.ignoreEmulatedMouseEvents = true;\n        };\n        hoverProps.onMouseEnter = function (e) {\n          if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, 'mouse');\n          state.ignoreEmulatedMouseEvents = false;\n        };\n        hoverProps.onMouseLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, 'mouse');\n        };\n      }\n      return {\n        hoverProps: hoverProps,\n        triggerHoverEnd: triggerHoverEnd\n      };\n    }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]),\n    hoverProps1 = _$bx7SL$useMemo.hoverProps,\n    triggerHoverEnd1 = _$bx7SL$useMemo.triggerHoverEnd;\n  $bx7SL$useEffect(function () {\n    if (isDisabled) triggerHoverEnd1({\n      currentTarget: state.target\n    }, state.pointerType);\n  }, [isDisabled]);\n  return {\n    hoverProps: hoverProps1,\n    isHovered: isHovered\n  };\n}\nvar $e0b6e0b68ec7f50f$exports = {};\n$parcel$export($e0b6e0b68ec7f50f$exports, \"useInteractOutside\", function () {\n  return $e0b6e0b68ec7f50f$export$872b660ac5a1ff98;\n});\nfunction $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {\n  var ref = props.ref,\n    onInteractOutside = props.onInteractOutside,\n    isDisabled = props.isDisabled,\n    onInteractOutsideStart = props.onInteractOutsideStart;\n  var stateRef = $bx7SL$useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside: onInteractOutside,\n    onInteractOutsideStart: onInteractOutsideStart\n  });\n  var state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n  $bx7SL$useEffect(function () {\n    if (isDisabled) return;\n    var onPointerDown = function onPointerDown(e) {\n      if ($e0b6e0b68ec7f50f$var$isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) state.onInteractOutsideStart(e);\n        state.isPointerDown = true;\n      }\n    };\n    if (typeof PointerEvent !== 'undefined') {\n      var onPointerUp = function onPointerUp(e) {\n        if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n      return function () {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      var onMouseUp = function onMouseUp(e) {\n        if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;else if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n      return function () {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\nfunction $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {\n  if (event.button > 0) return false;\n  if (event.target) {\n    var ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;\n  }\n  return ref.current && !ref.current.contains(event.target);\n}\nvar $46d819fcbaf35654$exports = {};\n$parcel$export($46d819fcbaf35654$exports, \"useKeyboard\", function () {\n  return $46d819fcbaf35654$export$8f71654801c2f7cd;\n});\nfunction $93925083ecbb358c$export$48d1ea6320830260(handler) {\n  if (!handler) return;\n  var shouldStopPropagation = true;\n  return function (e) {\n    var event = _objectSpread(_objectSpread({}, e), {}, {\n      preventDefault: function preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented: function isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation: function stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation: function continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    });\n    handler(event);\n    if (shouldStopPropagation) e.stopPropagation();\n  };\n}\nfunction $46d819fcbaf35654$export$8f71654801c2f7cd(props) {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyDown),\n      onKeyUp: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyUp)\n    }\n  };\n}\nvar $e8a7022cf87cba2a$exports = {};\n$parcel$export($e8a7022cf87cba2a$exports, \"useMove\", function () {\n  return $e8a7022cf87cba2a$export$36da96379f79f245;\n});\nfunction $e8a7022cf87cba2a$export$36da96379f79f245(props) {\n  var onMoveStart = props.onMoveStart,\n    onMove = props.onMove,\n    onMoveEnd = props.onMoveEnd;\n  var state = $bx7SL$useRef({\n    didMove: false,\n    lastPosition: null,\n    id: null\n  });\n  var _$bx7SL$useGlobalList2 = $bx7SL$useGlobalListeners(),\n    addGlobalListener = _$bx7SL$useGlobalList2.addGlobalListener,\n    removeGlobalListener = _$bx7SL$useGlobalList2.removeGlobalListener;\n  var moveProps1 = $bx7SL$useMemo(function () {\n    var moveProps = {};\n    var start = function start() {\n      $14c0b72509d70225$export$16a4697467175487();\n      state.current.didMove = false;\n    };\n    var move = function move(originalEvent, pointerType, deltaX, deltaY) {\n      if (deltaX === 0 && deltaY === 0) return;\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({\n          type: 'movestart',\n          pointerType: pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType: pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    var end = function end(originalEvent, pointerType) {\n      $14c0b72509d70225$export$b0d6fa1ab32e3295();\n      if (state.current.didMove) onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({\n        type: 'moveend',\n        pointerType: pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    if (typeof PointerEvent === 'undefined') {\n      var onMouseMove = function onMouseMove(e) {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = function (e) {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      var onTouchMove = function onTouchMove(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref3) {\n          var identifier = _ref3.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          var _e$changedTouches$tou = e.changedTouches[touch],\n            pageX = _e$changedTouches$tou.pageX,\n            pageY = _e$changedTouches$tou.pageY;\n          move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: pageX,\n            pageY: pageY\n          };\n        }\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref4) {\n          var identifier = _ref4.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = function (e) {\n        if (e.changedTouches.length === 0 || state.current.id != null) return;\n        var _e$changedTouches$ = e.changedTouches[0],\n          pageX = _e$changedTouches$.pageX,\n          pageY = _e$changedTouches$.pageY,\n          identifier = _e$changedTouches$.identifier;\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {\n          pageX: pageX,\n          pageY: pageY\n        };\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || 'mouse';\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || 'mouse';\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n      moveProps.onPointerDown = function (e) {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n    var triggerKeyboardMove = function triggerKeyboardMove(e, deltaX, deltaY) {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n    moveProps.onKeyDown = function (e) {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n  return {\n    moveProps: moveProps1\n  };\n}\nvar $7d0a636d7a4dcefd$exports = {};\n$parcel$export($7d0a636d7a4dcefd$exports, \"useScrollWheel\", function () {\n  return $7d0a636d7a4dcefd$export$2123ff2b87c81ca;\n});\nfunction $7d0a636d7a4dcefd$export$2123ff2b87c81ca(props, ref) {\n  var onScroll = props.onScroll,\n    isDisabled = props.isDisabled;\n  var onScrollHandler = $bx7SL$useCallback(function (e) {\n    if (e.ctrlKey) return;\n    e.preventDefault();\n    e.stopPropagation();\n    if (onScroll) onScroll({\n      deltaX: e.deltaX,\n      deltaY: e.deltaY\n    });\n  }, [onScroll]);\n  $bx7SL$useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\nvar $8a26561d2877236e$exports = {};\n$parcel$export($8a26561d2877236e$exports, \"useLongPress\", function () {\n  return $8a26561d2877236e$export$c24ed0104d07eab9;\n});\nvar $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;\nfunction $8a26561d2877236e$export$c24ed0104d07eab9(props) {\n  var isDisabled = props.isDisabled,\n    onLongPressStart = props.onLongPressStart,\n    onLongPressEnd = props.onLongPressEnd,\n    onLongPress = props.onLongPress,\n    _props$threshold = props.threshold,\n    threshold = _props$threshold === void 0 ? $8a26561d2877236e$var$DEFAULT_THRESHOLD : _props$threshold,\n    accessibilityDescription = props.accessibilityDescription;\n  var timeRef = $bx7SL$useRef(null);\n  var _$bx7SL$useGlobalList3 = $bx7SL$useGlobalListeners(),\n    addGlobalListener = _$bx7SL$useGlobalList3.addGlobalListener,\n    removeGlobalListener = _$bx7SL$useGlobalList3.removeGlobalListener;\n  var _$f6c31cce2adf654f$ex2 = $f6c31cce2adf654f$export$45712eceda6fad21({\n      isDisabled: isDisabled,\n      onPressStart: function onPressStart(e1) {\n        if (e1.pointerType === 'mouse' || e1.pointerType === 'touch') {\n          if (onLongPressStart) onLongPressStart(_objectSpread(_objectSpread({}, e1), {}, {\n            type: 'longpressstart'\n          }));\n          timeRef.current = setTimeout(function () {\n            e1.target.dispatchEvent(new PointerEvent('pointercancel', {\n              bubbles: true\n            }));\n            if (onLongPress) onLongPress(_objectSpread(_objectSpread({}, e1), {}, {\n              type: 'longpress'\n            }));\n            timeRef.current = null;\n          }, threshold);\n          if (e1.pointerType === 'touch') {\n            var onContextMenu = function onContextMenu(e) {\n              e.preventDefault();\n            };\n            addGlobalListener(e1.target, 'contextmenu', onContextMenu, {\n              once: true\n            });\n            addGlobalListener(window, 'pointerup', function () {\n              setTimeout(function () {\n                removeGlobalListener(e1.target, 'contextmenu', onContextMenu);\n              }, 30);\n            }, {\n              once: true\n            });\n          }\n        }\n      },\n      onPressEnd: function onPressEnd(e) {\n        if (timeRef.current) clearTimeout(timeRef.current);\n        if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) onLongPressEnd(_objectSpread(_objectSpread({}, e), {}, {\n          type: 'longpressend'\n        }));\n      }\n    }),\n    pressProps = _$f6c31cce2adf654f$ex2.pressProps;\n  var descriptionProps = $bx7SL$useDescription(onLongPress && !isDisabled ? accessibilityDescription : null);\n  return {\n    longPressProps: $bx7SL$mergeProps(pressProps, descriptionProps)\n  };\n}\nexport { $3b117e43dc0ca95d$export$27c701ed9e449e99 as Pressable, $f1ab8c75478c6f73$export$3351871ee4b288b8 as PressResponder, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6 as useFocus, $507fabe10e71c6fb$export$b9b3dfddab17db27 as isFocusVisible, $507fabe10e71c6fb$export$630ff653c5ada6a9 as getInteractionModality, $507fabe10e71c6fb$export$8397ddfc504fdb9a as setInteractionModality, $507fabe10e71c6fb$export$98e20ec92f614cfe as useInteractionModality, $507fabe10e71c6fb$export$ffd9e5021c1fb2d6 as useFocusVisible, $507fabe10e71c6fb$export$ec71b4b83ac08ec3 as useFocusVisibleListener, $9ab94262bd0047c7$export$420e68273165f4ec as useFocusWithin, $6179b936705e76d3$export$ae780daf29e6d456 as useHover, $e0b6e0b68ec7f50f$export$872b660ac5a1ff98 as useInteractOutside, $46d819fcbaf35654$export$8f71654801c2f7cd as useKeyboard, $e8a7022cf87cba2a$export$36da96379f79f245 as useMove, $f6c31cce2adf654f$export$45712eceda6fad21 as usePress, $7d0a636d7a4dcefd$export$2123ff2b87c81ca as useScrollWheel, $8a26561d2877236e$export$c24ed0104d07eab9 as useLongPress };","map":{"version":3,"names":["$14c0b72509d70225$var$state","$14c0b72509d70225$var$savedUserSelect","$14c0b72509d70225$var$modifiedElementMap","WeakMap","$14c0b72509d70225$export$16a4697467175487","target","$bx7SL$isIOS","document","documentElement","style","webkitUserSelect","set","userSelect","$14c0b72509d70225$export$b0d6fa1ab32e3295","setTimeout","$bx7SL$runAfterTransition","has","targetOldUserSelect","get","getAttribute","removeAttribute","delete","$8a9cb279dc87e130$export$60278871457622de","event","mozInputSource","isTrusted","detail","pointerType","$8a9cb279dc87e130$export$905e7fc544a71f36","type","nativeEvent","_classCallCheck","currentTarget","relatedTarget","bubbles","cancelable","defaultPrevented","eventPhase","timeStamp","_createClass","key","value","isDefaultPrevented","preventDefault","stopPropagation","isPropagationStopped","persist","$8a9cb279dc87e130$export$715c682d09d639cc","onBlur","stateRef","$bx7SL$useRef","isFocused","observer","current","$bx7SL$useLayoutEffect","state","disconnect","$bx7SL$useCallback","e1","HTMLButtonElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","onBlurHandler","e","_current","ref","disabled","call","addEventListener","once","MutationObserver","dispatchEvent","FocusEvent","observe","attributes","attributeFilter","$ae1eeba8b9eafd08$export$5165eccb35aaadb5","$bx7SL$react","createContext","displayName","$f6c31cce2adf654f$var$usePressResponderContext","props","context","$bx7SL$useContext","register","contextProps","_objectWithoutProperties","_excluded","$bx7SL$mergeProps","$bx7SL$useSyncRef","$f6c31cce2adf654f$export$45712eceda6fad21","_$f6c31cce2adf654f$va","onPress1","onPress","onPressChange1","onPressChange","onPressStart1","onPressStart","onPressEnd1","onPressEnd","onPressUp1","onPressUp","isDisabled1","isDisabled","isPressedProp","isPressed","preventFocusOnPress","shouldCancelOnPointerExit","allowTextSelectionOnPress","_","domProps","_excluded2","propsRef","_$bx7SL$useState","$bx7SL$useState","_$bx7SL$useState2","_slicedToArray","setPressed","ignoreEmulatedMouseEvents","ignoreClickAfterPress","didFirePressStart","activePointerId","isOverTarget","_$bx7SL$useGlobalList","$bx7SL$useGlobalListeners","addGlobalListener","removeAllGlobalListeners","pressProps1","$bx7SL$useMemo","triggerPressStart","originalEvent","_propsRef$current","shiftKey","metaKey","ctrlKey","altKey","triggerPressEnd","wasPressed","arguments","length","undefined","_propsRef$current2","triggerPressUp","_propsRef$current3","cancel","$f6c31cce2adf654f$var$createEvent","pressProps","onKeyDown","$f6c31cce2adf654f$var$isValidKeyboardEvent","contains","$f6c31cce2adf654f$var$shouldPreventDefaultKeyboard","repeat","onKeyUp","onClick","button","$bx7SL$focusWithoutScrolling","$f6c31cce2adf654f$var$isHTMLAnchorLink","click","PointerEvent","onPointerDown","$f6c31cce2adf654f$var$isVirtualPointerEvent","$f6c31cce2adf654f$var$shouldPreventDefault","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","$f6c31cce2adf654f$var$isOverTarget","onDragStart","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","$f6c31cce2adf654f$var$getTouchFromEvent","identifier","window","onScroll","onTouchMove","$f6c31cce2adf654f$var$getTouchById","onTouchEnd","onTouchCancel","$bx7SL$useEffect","tagName","hasAttribute","code","element","isContentEditable","role","targetTouches","changedTouches","i","$f6c31cce2adf654f$var$getPointClientRect","point","offsetX","width","radiusX","offsetY","height","radiusY","top","clientY","right","clientX","bottom","left","$f6c31cce2adf654f$var$areRectanglesOverlapping","a","b","rect","getBoundingClientRect","pointRect","draggable","pressure","$3b117e43dc0ca95d$export$27c701ed9e449e99","forwardRef","_ref","children","_excluded3","newRef","_$f6c31cce2adf654f$ex","_objectSpread","child","Children","only","cloneElement","$f1ab8c75478c6f73$export$3351871ee4b288b8","_ref2","_excluded4","isRegistered","prevContext","console","warn","createElement","Provider","$a1ea59d68270f0dd$export$f8168d8dd8fd66e6","onFocusProp","onFocus","onBlurProp","onFocusChange","onSyntheticFocus","focusProps","$507fabe10e71c6fb$var$currentModality","$507fabe10e71c6fb$var$changeHandlers","Set","$507fabe10e71c6fb$var$hasSetupGlobalListeners","$507fabe10e71c6fb$var$hasEventBeforeFocus","$507fabe10e71c6fb$var$hasBlurredWindowRecently","$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","$507fabe10e71c6fb$var$triggerChangeHandlers","modality","handler","$507fabe10e71c6fb$var$isValidKey","$bx7SL$isMac","$507fabe10e71c6fb$var$handleKeyboardEvent","$507fabe10e71c6fb$var$handlePointerEvent","$507fabe10e71c6fb$var$handleClickEvent","$507fabe10e71c6fb$var$handleFocusEvent","$507fabe10e71c6fb$var$handleWindowBlur","$507fabe10e71c6fb$var$setupGlobalFocusEvents","focus","HTMLElement","prototype","apply","readyState","$507fabe10e71c6fb$export$b9b3dfddab17db27","$507fabe10e71c6fb$export$630ff653c5ada6a9","$507fabe10e71c6fb$export$8397ddfc504fdb9a","$507fabe10e71c6fb$export$98e20ec92f614cfe","_$bx7SL$useState3","_$bx7SL$useState4","setModality","add","$507fabe10e71c6fb$var$isKeyboardFocusEvent","isTextInput","KeyboardEvent","$507fabe10e71c6fb$export$ffd9e5021c1fb2d6","autoFocus","_$bx7SL$useState5","_$bx7SL$useState6","isFocusVisibleState","setFocusVisible","$507fabe10e71c6fb$export$ec71b4b83ac08ec3","isFocusVisible","fn","deps","opts","$9ab94262bd0047c7$export$420e68273165f4ec","onBlurWithin","onFocusWithin","onFocusWithinChange","isFocusWithin","focusWithinProps","$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$hoverCount","$6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$handleGlobalPointerEvent","$6179b936705e76d3$var$setupGlobalTouchEvents","removeEventListener","$6179b936705e76d3$export$ae780daf29e6d456","onHoverStart","onHoverChange","onHoverEnd","_$bx7SL$useState7","_$bx7SL$useState8","isHovered","setHovered","_$bx7SL$useMemo","triggerHoverStart","triggerHoverEnd","hoverProps","onPointerEnter","onPointerLeave","hoverProps1","triggerHoverEnd1","$e0b6e0b68ec7f50f$export$872b660ac5a1ff98","onInteractOutside","onInteractOutsideStart","isPointerDown","$e0b6e0b68ec7f50f$var$isValidEvent","ownerDocument","$93925083ecbb358c$export$48d1ea6320830260","shouldStopPropagation","error","continuePropagation","$46d819fcbaf35654$export$8f71654801c2f7cd","keyboardProps","$e8a7022cf87cba2a$export$36da96379f79f245","onMoveStart","onMove","onMoveEnd","didMove","lastPosition","id","_$bx7SL$useGlobalList2","removeGlobalListener","moveProps1","moveProps","start","move","deltaX","deltaY","end","onMouseMove","pageX","pageY","_toConsumableArray","findIndex","_ref3","_e$changedTouches$tou","_ref4","_e$changedTouches$","triggerKeyboardMove","$7d0a636d7a4dcefd$export$2123ff2b87c81ca","onScrollHandler","$bx7SL$useEvent","$8a26561d2877236e$var$DEFAULT_THRESHOLD","$8a26561d2877236e$export$c24ed0104d07eab9","onLongPressStart","onLongPressEnd","onLongPress","_props$threshold","threshold","accessibilityDescription","timeRef","_$bx7SL$useGlobalList3","_$f6c31cce2adf654f$ex2","onContextMenu","clearTimeout","descriptionProps","$bx7SL$useDescription","longPressProps"],"sources":["D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\index.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\Pressable.tsx","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\usePress.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\textSelection.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\utils.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\context.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\PressResponder.tsx","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocus.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocusVisible.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocusWithin.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useHover.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useInteractOutside.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useKeyboard.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\createEventHandler.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useMove.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useScrollWheel.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useLongPress.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './Pressable';\nexport * from './PressResponder';\nexport * from './useFocus';\nexport * from './useFocusVisible';\nexport * from './useFocusWithin';\nexport * from './useHover';\nexport * from './useInteractOutside';\nexport * from './useKeyboard';\nexport * from './useMove';\nexport * from './usePress';\nexport * from './useScrollWheel';\nexport * from './useLongPress';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {HTMLAttributes, ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<HTMLAttributes<HTMLElement>, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<HTMLElement>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {focusWithoutScrolling, mergeProps, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport {isVirtualClick} from './utils';\nimport {PointerType, PressEvents} from '@react-types/shared';\nimport {PressResponderContext} from './context';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean,\n  /** Whether text selection should be enabled on the pressable element. */\n  allowTextSelectionOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<HTMLElement>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  activePointerId: any,\n  target: HTMLElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: HTMLAttributes<HTMLElement>\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    allowTextSelectionOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n  let propsRef = useRef<PressHookProps>(null);\n  propsRef.current = {onPress, onPressChange, onPressStart, onPressEnd, onPressUp, isDisabled, shouldCancelOnPointerExit};\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressStart, onPressChange, isDisabled} = propsRef.current;\n      if (isDisabled || state.didFirePressStart) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      let {onPressEnd, onPressChange, onPress, isDisabled} = propsRef.current;\n      if (!state.didFirePressStart) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed && !isDisabled) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressUp, isDisabled} = propsRef.current;\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    let cancel = (e: EventBase) => {\n      if (state.isPressed) {\n        if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n      }\n    };\n\n    let pressProps: HTMLAttributes<HTMLElement> = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent) && e.currentTarget.contains(e.target as HTMLElement)) {\n          if (shouldPreventDefaultKeyboard(e.target as Element)) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget as HTMLElement;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent) && !e.repeat && e.currentTarget.contains(e.target as HTMLElement)) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || isVirtualClick(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e)) {\n        if (shouldPreventDefaultKeyboard(e.target as Element)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n\n        state.isPressed = false;\n        let target = e.target as HTMLElement;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (state.target.contains(target) && isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link') {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if (isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as HTMLElement)) {\n          e.preventDefault();\n        }\n\n        state.pointerType = e.pointerType;\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          if (!allowTextSelectionOnPress) {\n            disableTextSelection(state.target);\n          }\n\n          triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.currentTarget as HTMLElement)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target as HTMLElement) || state.pointerType === 'virtual') {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || e.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) {\n            restoreTextSelection(state.target);\n          }\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as HTMLElement)) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        if (!allowTextSelectionOnPress) {\n          disableTextSelection(state.target);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          if (propsRef.current.shouldCancelOnPointerExit) {\n            cancel(e);\n          }\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as HTMLElement).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (!allowTextSelectionOnPress) {\n        restoreTextSelection(ref.current.target);\n      }\n    };\n  }, [allowTextSelectionOnPress]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: HTMLElement): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent): boolean {\n  const {key, code, target} = event;\n  const element = target as HTMLElement;\n  const {tagName, isContentEditable} = element;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') &&\n    (tagName !== 'INPUT' &&\n      tagName !== 'TEXTAREA' &&\n      isContentEditable !== true) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: HTMLElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = (point.width / 2) || point.radiusX || 0;\n  let offsetY = (point.height / 2) || point.radiusY || 0;\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: HTMLElement) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: HTMLElement) {\n  // We cannot prevent default if the target is a draggable element.\n  return !target.draggable;\n}\n\nfunction shouldPreventDefaultKeyboard(target: Element) {\n  return !((target.tagName === 'INPUT' || target.tagName === 'BUTTON') && (target as HTMLButtonElement | HTMLInputElement).type === 'submit');\n}\n\nfunction isVirtualPointerEvent(event: PointerEvent) {\n  // If the pointer size is zero, then we assume it's from a screen reader.\n  // Android TalkBack double tap will sometimes return a event with width and height of 1\n  // and pointerType === 'mouse' so we need to check for a specific combination of event attributes.\n  // Cannot use \"event.pressure === 0\" as the sole check due to Safari pointer events always returning pressure === 0\n  // instead of .5, see https://bugs.webkit.org/show_bug.cgi?id=206216. event.pointerType === 'mouse' is to distingush\n  // Talkback double tap from Windows Firefox touch screen press\n  return (\n    (event.width === 0 && event.height === 0) ||\n    (event.width === 1 &&\n      event.height === 1 &&\n      event.pressure === 0 &&\n      event.detail === 0 &&\n      event.pointerType === 'mouse'\n    )\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<HTMLElement, string>();\n\nexport function disableTextSelection(target?: HTMLElement) {\n  if (isIOS()) {\n    if (state === 'default') {\n      savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: HTMLElement) {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n          if (document.documentElement.style.webkitUserSelect === 'none') {\n            document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target);\n\n      if (target.style.userSelect === 'none') {\n        target.style.userSelect = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n\nexport class SyntheticFocusEvent implements ReactFocusEvent {\n  nativeEvent: FocusEvent;\n  target: Element;\n  currentTarget: Element;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as Element;\n    this.currentTarget = nativeEvent.currentTarget as Element;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent(onBlur: (e: ReactFocusEvent) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    onBlur,\n    observer: null as MutationObserver\n  });\n  stateRef.current.onBlur = onBlur;\n\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler = (e: FocusEvent) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          stateRef.current.onBlur?.(new SyntheticFocusEvent('blur', e));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          target.dispatchEvent(new FocusEvent('blur'));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, []);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<HTMLElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<HTMLElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref: ref || prevContext?.ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes, useCallback} from 'react';\nimport {FocusEvents} from '@react-types/shared';\nimport {useSyntheticBlurEvent} from './utils';\n\ninterface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps['onBlur'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n\n  const onFocus: FocusProps['onFocus'] = useCallback((e: FocusEvent) => {\n    if (e.target === e.currentTarget) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : null\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac} from '@react-aria/utils';\nimport {isVirtualClick} from './utils';\nimport {useEffect, useState} from 'react';\n\ntype Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\ntype FocusVisibleHandler = (isFocusVisible: boolean) => void;\ninterface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(opts?.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\ninterface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\ninterface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    if (!state.current.isFocusWithin) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        onFocus: null,\n        onBlur: null\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {HoverEvents} from '@react-types/shared';\nimport {HTMLAttributes, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: HTMLAttributes<HTMLElement>,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: HTMLAttributes<HTMLElement> = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as HTMLElement)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as HTMLElement)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\ninterface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  onInteractOutsideStart?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n    onInteractOutside,\n    onInteractOutsideStart\n  });\n  let state = stateRef.current;\n  state.onInteractOutside = onInteractOutside;\n  state.onInteractOutsideStart = onInteractOutsideStart;\n\n  useEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    let onPointerDown = (e) => {\n      if (isValidEvent(e, ref) && state.onInteractOutside) {\n        if (state.onInteractOutsideStart) {\n          state.onInteractOutsideStart(e);\n        }\n        state.isPointerDown = true;\n      }\n    };\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && state.onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          state.onInteractOutside(e);\n        }\n      };\n\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, state, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {HTMLAttributes} from 'react';\nimport {KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {MoveEvents, PointerType} from '@react-types/shared';\nimport React, {HTMLAttributes, useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\ninterface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: HTMLAttributes<HTMLElement>\n}\n\ninterface EventBase {\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: HTMLAttributes<HTMLElement> = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (originalEvent: EventBase, pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    };\n    let end = (originalEvent: EventBase, pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey,\n          altKey: originalEvent.altKey\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (e: EventBase, deltaX: number, deltaY: number) => {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes, useRef} from 'react';\nimport {LongPressEvent} from '@react-types/shared';\nimport {mergeProps, useDescription, useGlobalListeners} from '@react-aria/utils';\nimport {usePress} from './usePress';\n\ninterface LongPressProps {\n  /** Whether long press events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a long press interaction starts. */\n  onLongPressStart?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when a long press interaction ends, either\n   * over the target or when the pointer leaves the target.\n   */\n  onLongPressEnd?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when the threshold time is met while\n   * the press is over the target.\n   */\n  onLongPress?: (e: LongPressEvent) => void,\n  /**\n   * The amount of time in milliseconds to wait before triggering a long press.\n   * @default 500ms\n   */\n  threshold?: number,\n  /**\n   * A description for assistive techology users indicating that a long press\n   * action is available, e.g. \"Long press to open menu\".\n   */\n  accessibilityDescription?: string\n}\n\ninterface LongPressResult {\n  /** Props to spread on the target element. */\n  longPressProps: HTMLAttributes<HTMLElement>\n}\n\nconst DEFAULT_THRESHOLD = 500;\n\n/**\n * Handles long press interactions across mouse and touch devices. Supports a customizable time threshold,\n * accessibility description, and normalizes behavior across browsers and devices.\n */\nexport function useLongPress(props: LongPressProps): LongPressResult {\n  let {\n    isDisabled,\n    onLongPressStart,\n    onLongPressEnd,\n    onLongPress,\n    threshold = DEFAULT_THRESHOLD,\n    accessibilityDescription\n  } = props;\n\n  const timeRef = useRef(null);\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let {pressProps} = usePress({\n    isDisabled,\n    onPressStart(e) {\n      if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n        if (onLongPressStart) {\n          onLongPressStart({\n            ...e,\n            type: 'longpressstart'\n          });\n        }\n\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent('pointercancel', {bubbles: true}));\n          if (onLongPress) {\n            onLongPress({\n              ...e,\n              type: 'longpress'\n            });\n          }\n          timeRef.current = null;\n        }, threshold);\n\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === 'touch') {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, 'contextmenu', onContextMenu, {once: true});\n          addGlobalListener(window, 'pointerup', () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n            }, 30);\n          }, {once: true});\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) {\n        clearTimeout(timeRef.current);\n      }\n\n      if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) {\n        onLongPressEnd({\n          ...e,\n          type: 'longpressend'\n        });\n      }\n    }\n  });\n\n  let descriptionProps = useDescription(onLongPress && !isDisabled ? accessibilityDescription : null);\n\n  return {\n    longPressProps: mergeProps(pressProps, descriptionProps)\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}