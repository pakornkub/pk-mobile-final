{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { FormControl, VStack, Input, Icon, Button, Text, Center, Box, useToast } from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useAuthLogin } from \"../../hooks/useLogin\";\nimport AppAlert from \"../../components/AppAlert\";\nimport LoadingScreen from \"../../components/LoadingScreen\";\nimport Logo from \"../../assets/toto.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var _errors$username, _errors$password;\n  var toast = useToast();\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var _useAuthLogin = useAuthLogin(),\n    isLoading = _useAuthLogin.isLoading,\n    isError = _useAuthLogin.isError,\n    error = _useAuthLogin.error,\n    status = _useAuthLogin.status,\n    mutate = _useAuthLogin.mutate;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  var onSubmit = useCallback(function (data) {\n    mutate(data);\n  }, []);\n  useEffect(function () {\n    if (status === \"success\") {} else if (status === \"error\") {\n      toast.show({\n        render: function render() {\n          var _error$response, _error$response$data;\n          return _jsx(AppAlert, {\n            text: error == null ? void 0 : (_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message,\n            type: \"error\"\n          });\n        },\n        placement: \"top\",\n        duration: 2000\n      });\n    }\n    return function () {};\n  }, [status]);\n  return _jsxs(Box, {\n    flex: 1,\n    safeArea: true,\n    children: [_jsx(LoadingScreen, {\n      show: isLoading\n    }), _jsx(Center, {\n      mt: \"10%\",\n      children: _jsx(Logo, {\n        width: 250,\n        height: 120\n      })\n    }), _jsx(Box, {\n      p: 5,\n      children: _jsxs(VStack, {\n        space: 5,\n        p: 10,\n        backgroundColor: \"coolGray.200\",\n        borderRadius: \"xl\",\n        children: [_jsx(Center, {\n          children: _jsx(Text, {\n            fontWeight: \"bold\",\n            color: \"coolGray.500\",\n            children: \"REPACK SYSTEM\"\n          })\n        }), _jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: \"username\" in errors,\n          children: [_jsx(Controller, {\n            control: control,\n            render: function render(_ref) {\n              var _ref$field = _ref.field,\n                onChange = _ref$field.onChange,\n                onBlur = _ref$field.onBlur,\n                value = _ref$field.value;\n              return _jsx(Input, {\n                InputLeftElement: _jsx(Icon, {\n                  as: _jsx(MaterialIcons, {\n                    name: \"person\"\n                  }),\n                  size: \"md\"\n                }),\n                variant: \"underlined\",\n                p: 2,\n                placeholder: \"Username\",\n                onBlur: onBlur,\n                onChangeText: onChange,\n                value: value\n              });\n            },\n            name: \"username\",\n            rules: {\n              required: \"Username is required\"\n            },\n            defaultValue: \"pakorn.wo\"\n          }), _jsx(FormControl.ErrorMessage, {\n            children: (_errors$username = errors.username) == null ? void 0 : _errors$username.message\n          })]\n        }), _jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: \"password\" in errors,\n          children: [_jsx(Controller, {\n            control: control,\n            render: function render(_ref2) {\n              var _ref2$field = _ref2.field,\n                onChange = _ref2$field.onChange,\n                onBlur = _ref2$field.onBlur,\n                value = _ref2$field.value;\n              return _jsx(Input, {\n                InputLeftElement: _jsx(Icon, {\n                  as: _jsx(MaterialIcons, {\n                    name: \"lock\"\n                  }),\n                  size: \"md\"\n                }),\n                variant: \"underlined\",\n                p: 2,\n                type: show ? \"text\" : \"password\",\n                placeholder: \"Password\",\n                InputRightElement: _jsx(Icon, {\n                  size: \"md\",\n                  color: show ? \"blue.500\" : \"coolGray.500\",\n                  as: _jsx(MaterialIcons, {\n                    name: show ? \"visibility\" : \"visibility-off\"\n                  }),\n                  onPress: function onPress() {\n                    return setShow(!show);\n                  }\n                }),\n                onBlur: onBlur,\n                onChangeText: onChange,\n                value: value\n              });\n            },\n            name: \"password\",\n            rules: {\n              required: \"Password is required\"\n            },\n            defaultValue: \"1234\"\n          }), _jsx(FormControl.ErrorMessage, {\n            children: (_errors$password = errors.password) == null ? void 0 : _errors$password.message\n          })]\n        }), _jsx(Button, {\n          leftIcon: _jsx(Icon, {\n            as: _jsx(MaterialIcons, {\n              name: \"login\"\n            }),\n            size: \"sm\"\n          }),\n          onPress: handleSubmit(onSubmit),\n          children: \"SIGN IN\"\n        })]\n      })\n    }), _jsx(Center, {\n      flex: 1,\n      children: _jsx(Text, {\n        children: \"V 1.0\"\n      })\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useForm","Controller","FormControl","VStack","Input","Icon","Button","Text","Center","Box","useToast","MaterialIcons","useAuthLogin","AppAlert","LoadingScreen","Logo","jsx","_jsx","jsxs","_jsxs","Login","_errors$username","_errors$password","toast","_useForm","control","handleSubmit","errors","formState","_useAuthLogin","isLoading","isError","error","status","mutate","_useState","_useState2","_slicedToArray","show","setShow","onSubmit","data","render","_error$response","_error$response$data","text","response","message","type","placement","duration","flex","safeArea","children","mt","width","height","p","space","backgroundColor","borderRadius","fontWeight","color","isRequired","isInvalid","_ref","_ref$field","field","onChange","onBlur","value","InputLeftElement","as","name","size","variant","placeholder","onChangeText","rules","required","defaultValue","ErrorMessage","username","_ref2","_ref2$field","InputRightElement","onPress","password","leftIcon"],"sources":["D:/_Dev/expo/pk-mobile/src/views/Login/Login.tsx"],"sourcesContent":["import React, { useState, useEffect,useCallback } from \"react\";\r\nimport { useForm, Controller, SubmitHandler } from \"react-hook-form\";\r\nimport {\r\n  FormControl,\r\n  VStack,\r\n  Input,\r\n  Icon,\r\n  Button,\r\n  Text,\r\n  Center,\r\n  Box,\r\n  useToast,\r\n} from \"native-base\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nimport { useAuthLogin } from \"../../hooks/useLogin\";\r\nimport { IAuthLoginParams } from \"../../types/views/Login\";\r\n\r\nimport AppAlert from \"../../components/AppAlert\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport Logo from \"../../assets/toto.svg\";\r\n\r\nconst Login: React.FC = () => {\r\n  const toast = useToast();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IAuthLoginParams>();\r\n\r\n  const { isLoading, isError, error, status, mutate } = useAuthLogin();\r\n  const [show, setShow] = useState<boolean>(false);\r\n\r\n  const onSubmit: SubmitHandler<IAuthLoginParams> = useCallback((data) => {\r\n    mutate(data);\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    if (status === \"success\") {\r\n    } else if (status === \"error\") {\r\n      toast.show({\r\n        render: () => {\r\n          return (\r\n            <AppAlert text={error?.response?.data?.message} type=\"error\" />\r\n          );\r\n        },\r\n        placement: \"top\",\r\n        duration: 2000,\r\n      });\r\n    }\r\n\r\n    return () => {};\r\n  }, [status]);\r\n\r\n  return (\r\n    <Box flex={1} safeArea>\r\n      <LoadingScreen show={isLoading} />\r\n      <Center mt=\"10%\">\r\n        <Logo width={250} height={120} />\r\n      </Center>\r\n      <Box p={5}>\r\n        <VStack\r\n          space={5}\r\n          p={10}\r\n          backgroundColor=\"coolGray.200\"\r\n          borderRadius=\"xl\"\r\n        >\r\n          <Center>\r\n            <Text fontWeight=\"bold\" color=\"coolGray.500\">\r\n              REPACK SYSTEM\r\n            </Text>\r\n          </Center>\r\n          <FormControl isRequired isInvalid={\"username\" in errors}>\r\n            <Controller\r\n              control={control}\r\n              render={({ field: { onChange, onBlur, value } }) => (\r\n                <Input\r\n                  InputLeftElement={\r\n                    <Icon as={<MaterialIcons name=\"person\" />} size=\"md\" />\r\n                  }\r\n                  variant=\"underlined\"\r\n                  p={2}\r\n                  placeholder=\"Username\"\r\n                  onBlur={onBlur}\r\n                  onChangeText={onChange}\r\n                  value={value}\r\n                />\r\n              )}\r\n              name=\"username\"\r\n              rules={{ required: \"Username is required\" }}\r\n              defaultValue=\"pakorn.wo\"\r\n            />\r\n            <FormControl.ErrorMessage>\r\n              {errors.username?.message}\r\n            </FormControl.ErrorMessage>\r\n          </FormControl>\r\n          <FormControl isRequired isInvalid={\"password\" in errors}>\r\n            <Controller\r\n              control={control}\r\n              render={({ field: { onChange, onBlur, value } }) => (\r\n                <Input\r\n                  InputLeftElement={\r\n                    <Icon as={<MaterialIcons name=\"lock\" />} size=\"md\" />\r\n                  }\r\n                  variant=\"underlined\"\r\n                  p={2}\r\n                  type={show ? \"text\" : \"password\"}\r\n                  placeholder=\"Password\"\r\n                  InputRightElement={\r\n                    <Icon\r\n                      size=\"md\"\r\n                      color={show ? \"blue.500\" : \"coolGray.500\"}\r\n                      as={\r\n                        <MaterialIcons\r\n                          name={show ? \"visibility\" : \"visibility-off\"}\r\n                        />\r\n                      }\r\n                      onPress={() => setShow(!show)}\r\n                    />\r\n                  }\r\n                  onBlur={onBlur}\r\n                  onChangeText={onChange}\r\n                  value={value}\r\n                />\r\n              )}\r\n              name=\"password\"\r\n              rules={{ required: \"Password is required\" }}\r\n              defaultValue=\"1234\"\r\n            />\r\n\r\n            <FormControl.ErrorMessage>\r\n              {errors.password?.message}\r\n            </FormControl.ErrorMessage>\r\n          </FormControl>\r\n          <Button\r\n            leftIcon={<Icon as={<MaterialIcons name=\"login\" />} size=\"sm\" />}\r\n            onPress={handleSubmit(onSubmit)}\r\n          >\r\n            SIGN IN\r\n          </Button>\r\n        </VStack>\r\n      </Box>\r\n      <Center flex={1}>\r\n        <Text>V 1.0</Text>\r\n      </Center>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}