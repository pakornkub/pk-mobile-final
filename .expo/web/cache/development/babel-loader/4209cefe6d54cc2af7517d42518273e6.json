{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\naxios.interceptors.request.use(function _callee(config) {\n  var token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"accessToken\"));\n\n        case 2:\n          token = _context.sent;\n          config.url = \"http://119.59.105.14/pk-rest-server\" + config.url;\n\n          if (token) {\n            config.headers = {\n              'Authorization': JSON.parse(token || \"{}\")\n            };\n          }\n\n          return _context.abrupt(\"return\", config);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response && error.response.status === 401) {\n    return;\n  }\n\n  return Promise.reject(error);\n});\nexport var httpClient = axios;","map":{"version":3,"names":["axios","AsyncStorage","interceptors","request","use","config","getItem","token","url","headers","JSON","parse","error","Promise","reject","response","status","httpClient"],"sources":["D:/Dev/pk-mobile/src/services/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { REACT_APP_API_URL } from '@env';\r\n\r\n// Add a request interceptor\r\naxios.interceptors.request.use(async (config) => {\r\n\r\n    // Do something before request is sent\r\n\r\n    const token = await AsyncStorage.getItem(\"accessToken\");\r\n\r\n    config.url = `${REACT_APP_API_URL}${config.url}`;\r\n    //config.headers = { 'Content-Type': 'multipart/form-data' }\r\n    \r\n    if (token) {\r\n        config.headers = { /* ...config.headers, */ 'Authorization': JSON.parse(token || \"{}\") }\r\n    }\r\n\r\n    return config;\r\n\r\n}, (error) => {\r\n\r\n    // Do something with request error\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use((response) => {\r\n\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n\r\n    return response;\r\n\r\n}, function (error) {\r\n\r\n    if (error.response && error.response.status === 401) {\r\n\r\n        return\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport const httpClient = axios\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAIAD,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,iBAAOC,MAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCAIPJ,YAAY,CAACK,OAAb,CAAqB,aAArB,CAJO;;QAAA;UAIrBC,KAJqB;UAM3BF,MAAM,CAACG,GAAP,2CAAoCH,MAAM,CAACG,GAA3C;;UAGA,IAAID,KAAJ,EAAW;YACPF,MAAM,CAACI,OAAP,GAAiB;cAA2B,iBAAiBC,IAAI,CAACC,KAAL,CAAWJ,KAAK,IAAI,IAApB;YAA5C,CAAjB;UACH;;UAX0B,iCAapBF,MAboB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA/B,EAeG,UAACO,KAAD,EAAW;EAIV,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CApBD;AAuBAZ,KAAK,CAACE,YAAN,CAAmBa,QAAnB,CAA4BX,GAA5B,CAAgC,UAACW,QAAD,EAAc;EAK1C,OAAOA,QAAP;AAEH,CAPD,EAOG,UAAUH,KAAV,EAAiB;EAEhB,IAAIA,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAAhD,EAAqD;IAEjD;EACH;;EAED,OAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAfD;AAiBA,OAAO,IAAMK,UAAU,GAAGjB,KAAnB"},"metadata":{},"sourceType":"module"}