{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Center, Button, AlertDialog, Text, Input, HStack } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AppAlertDialog = function AppAlertDialog(_ref) {\n  var isOpenAlertDialog = _ref.isOpenAlertDialog,\n    setIsOpenAlertDialog = _ref.setIsOpenAlertDialog,\n    handleSubmit = _ref.handleSubmit;\n  var onClose = function onClose() {\n    return setIsOpenAlertDialog(false);\n  };\n  var cancelRef = useRef(null);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    random = _useState2[0],\n    setRandom = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    disabled = _useState4[0],\n    setDisabled = _useState4[1];\n  var handleInputAlertDialog = function handleInputAlertDialog(value) {\n    if (random === value) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n  var handleSubmitAlertDialog = function handleSubmitAlertDialog() {\n    handleSubmit();\n    onClose();\n  };\n  useEffect(function () {\n    setRandom((Math.random() + 1).toString(36).substring(6));\n  }, [isOpenAlertDialog]);\n  return _jsx(_Fragment, {\n    children: _jsx(Center, {\n      children: _jsx(AlertDialog, {\n        leastDestructiveRef: cancelRef,\n        isOpen: isOpenAlertDialog,\n        onClose: onClose,\n        children: _jsxs(AlertDialog.Content, {\n          children: [_jsx(AlertDialog.CloseButton, {}), _jsx(AlertDialog.Header, {\n            children: \"CONFIRM ORDER\"\n          }), _jsxs(AlertDialog.Body, {\n            children: [_jsx(Text, {\n              children: \"The box in this order not complete.\"\n            }), _jsx(Text, {\n              children: \"Please input text for confirmation.\"\n            }), _jsxs(HStack, {\n              flex: 1,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              space: 5,\n              mt: 5,\n              children: [_jsx(Text, {\n                bold: true,\n                children: random\n              }), _jsx(Input, {\n                placeholder: \"INPUT CONFIRM\",\n                w: \"50%\",\n                onChangeText: function onChangeText(text) {\n                  return handleInputAlertDialog(text);\n                }\n              })]\n            })]\n          }), _jsx(AlertDialog.Footer, {\n            children: _jsxs(Button.Group, {\n              space: 2,\n              children: [_jsx(Button, {\n                variant: \"unstyled\",\n                colorScheme: \"coolGray\",\n                onPress: onClose,\n                ref: cancelRef,\n                children: \"CANCEL\"\n              }), _jsx(Button, {\n                isDisabled: disabled,\n                colorScheme: \"warning\",\n                onPress: handleSubmitAlertDialog,\n                children: \"CONFIRM\"\n              })]\n            })\n          })]\n        })\n      })\n    })\n  });\n};\nexport default AppAlertDialog;","map":{"version":3,"names":["React","useState","useRef","useEffect","Center","Button","AlertDialog","Text","Input","HStack","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AppAlertDialog","_ref","isOpenAlertDialog","setIsOpenAlertDialog","handleSubmit","onClose","cancelRef","_useState","_useState2","_slicedToArray","random","setRandom","_useState3","_useState4","disabled","setDisabled","handleInputAlertDialog","value","handleSubmitAlertDialog","Math","toString","substring","children","leastDestructiveRef","isOpen","Content","CloseButton","Header","Body","flex","alignItems","justifyContent","space","mt","bold","placeholder","w","onChangeText","text","Footer","Group","variant","colorScheme","onPress","ref","isDisabled"],"sources":["D:/_Dev/expo/pk-mobile/src/components/AppAlertDialog.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Center, Button, AlertDialog, Text, Input, HStack } from \"native-base\";\r\n\r\nconst AppAlertDialog: React.FC<any> = ({\r\n  isOpenAlertDialog,\r\n  setIsOpenAlertDialog,\r\n  handleSubmit,\r\n}) => {\r\n  const onClose = () => setIsOpenAlertDialog(false);\r\n\r\n  const cancelRef = useRef(null);\r\n\r\n  const [random, setRandom] = useState<any>(null);\r\n  const [disabled, setDisabled] = useState<boolean>(true);\r\n\r\n  const handleInputAlertDialog = (value: string) => {\r\n    if (random === value) {\r\n      setDisabled(false);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  };\r\n\r\n  const handleSubmitAlertDialog = () => {\r\n    handleSubmit();\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRandom((Math.random() + 1).toString(36).substring(6));\r\n  }, [isOpenAlertDialog]);\r\n\r\n  return (\r\n    <>\r\n      <Center>\r\n        <AlertDialog\r\n          leastDestructiveRef={cancelRef}\r\n          isOpen={isOpenAlertDialog}\r\n          onClose={onClose}\r\n        >\r\n          <AlertDialog.Content>\r\n            <AlertDialog.CloseButton />\r\n            <AlertDialog.Header>CONFIRM ORDER</AlertDialog.Header>\r\n            <AlertDialog.Body>\r\n              <Text>The box in this order not complete.</Text>\r\n              <Text>Please input text for confirmation.</Text>\r\n              <HStack\r\n                flex={1}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                space={5}\r\n                mt={5}\r\n              >\r\n                <Text bold>{random}</Text>\r\n                <Input\r\n                  placeholder=\"INPUT CONFIRM\"\r\n                  w=\"50%\"\r\n                  onChangeText={(text) => handleInputAlertDialog(text)}\r\n                />\r\n              </HStack>\r\n            </AlertDialog.Body>\r\n            <AlertDialog.Footer>\r\n              <Button.Group space={2}>\r\n                <Button\r\n                  variant=\"unstyled\"\r\n                  colorScheme=\"coolGray\"\r\n                  onPress={onClose}\r\n                  ref={cancelRef}\r\n                >\r\n                  CANCEL\r\n                </Button>\r\n                <Button\r\n                  isDisabled={disabled}\r\n                  colorScheme=\"warning\"\r\n                  onPress={handleSubmitAlertDialog}\r\n                >\r\n                  CONFIRM\r\n                </Button>\r\n              </Button.Group>\r\n            </AlertDialog.Footer>\r\n          </AlertDialog.Content>\r\n        </AlertDialog>\r\n      </Center>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppAlertDialog;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}