{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { FlatList, Box, Pressable } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get(\"window\").width;\n\nvar GridList = function GridList(_ref) {\n  var navigation = _ref.navigation,\n      col = _ref.col,\n      items = _ref.items;\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      contentContainerStyle: styles.grid,\n      numColumns: col,\n      data: items,\n      keyExtractor: function keyExtractor(item) {\n        return item.Menu_Index;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Pressable, {\n          onPress: function onPress() {\n            return navigation.navigate(item.MenuId);\n          },\n          children: function children(_ref3) {\n            var isHovered = _ref3.isHovered,\n                isPressed = _ref3.isPressed;\n            return _jsx(Box, {\n              pt: 10,\n              pb: 10,\n              m: 2,\n              w: windowWidth / col * 0.9,\n              bg: isPressed ? \"primary.700\" : isHovered ? \"primary.700\" : \"primary.500\",\n              rounded: \"md\",\n              style: {\n                transform: [{\n                  scale: isPressed ? 0.96 : 1\n                }]\n              },\n              _text: {\n                fontSize: \"md\",\n                fontWeight: \"bold\",\n                color: \"warmGray.50\",\n                textAlign: \"center\",\n                textTransform: \"uppercase\"\n              },\n              children: item.MenuName\n            });\n          }\n        });\n      }\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    width: windowWidth\n  },\n  grid: {\n    paddingTop: 10\n  }\n});\nexport default GridList;","map":{"version":3,"names":["React","FlatList","Box","Pressable","windowWidth","Dimensions","get","width","GridList","navigation","col","items","styles","container","grid","item","Menu_Index","navigate","MenuId","isHovered","isPressed","transform","scale","fontSize","fontWeight","color","textAlign","textTransform","MenuName","StyleSheet","create","flex","alignItems","paddingTop"],"sources":["D:/Dev/pk-mobile/src/views/Menu/ListMenu.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Dimensions, SafeAreaView } from \"react-native\";\r\nimport { FlatList, Box, Pressable } from \"native-base\";\r\n\r\nconst windowWidth = Dimensions.get(\"window\").width;\r\n\r\nconst GridList: React.FC<any> = ({ navigation, col, items }) => {\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <FlatList\r\n        contentContainerStyle={styles.grid}\r\n        numColumns={col}\r\n        data={items}\r\n        keyExtractor={(item: any) => item.Menu_Index}\r\n        renderItem={({ item }: any) => {\r\n          return (\r\n            <Pressable onPress={() => navigation.navigate(item.MenuId)}>\r\n              {({ isHovered, isPressed }) => {\r\n                return (\r\n                  <Box\r\n                    pt={10}\r\n                    pb={10}\r\n                    m={2}\r\n                    w={(windowWidth / col) * 0.9}\r\n                    bg={\r\n                      isPressed\r\n                        ? \"primary.700\"\r\n                        : isHovered\r\n                        ? \"primary.700\"\r\n                        : \"primary.500\"\r\n                    }\r\n                    rounded=\"md\"\r\n                    style={{\r\n                      transform: [\r\n                        {\r\n                          scale: isPressed ? 0.96 : 1,\r\n                        },\r\n                      ],\r\n                    }}\r\n                    _text={{\r\n                      fontSize: \"md\",\r\n                      fontWeight: \"bold\",\r\n                      color: \"warmGray.50\",\r\n                      textAlign: \"center\",\r\n                      textTransform: \"uppercase\",\r\n                    }}\r\n                  >\r\n                    {item.MenuName}\r\n                  </Box>\r\n                );\r\n              }}\r\n            </Pressable>\r\n          );\r\n        }}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    width: windowWidth,\r\n  },\r\n  grid: {\r\n    paddingTop: 10,\r\n  },\r\n});\r\n\r\nexport default GridList;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,SAAxB,QAAyC,aAAzC;;AAEA,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;;AAEA,IAAMC,QAAuB,GAAG,SAA1BA,QAA0B,OAAgC;EAAA,IAA7BC,UAA6B,QAA7BA,UAA6B;EAAA,IAAjBC,GAAiB,QAAjBA,GAAiB;EAAA,IAAZC,KAAY,QAAZA,KAAY;EAC9D,OACE,KAAC,YAAD;IAAc,KAAK,EAAEC,MAAM,CAACC,SAA5B;IAAA,UACE,KAAC,QAAD;MACE,qBAAqB,EAAED,MAAM,CAACE,IADhC;MAEE,UAAU,EAAEJ,GAFd;MAGE,IAAI,EAAEC,KAHR;MAIE,YAAY,EAAE,sBAACI,IAAD;QAAA,OAAeA,IAAI,CAACC,UAApB;MAAA,CAJhB;MAKE,UAAU,EAAE,2BAAmB;QAAA,IAAhBD,IAAgB,SAAhBA,IAAgB;QAC7B,OACE,KAAC,SAAD;UAAW,OAAO,EAAE;YAAA,OAAMN,UAAU,CAACQ,QAAX,CAAoBF,IAAI,CAACG,MAAzB,CAAN;UAAA,CAApB;UAAA,UACG,yBAA8B;YAAA,IAA3BC,SAA2B,SAA3BA,SAA2B;YAAA,IAAhBC,SAAgB,SAAhBA,SAAgB;YAC7B,OACE,KAAC,GAAD;cACE,EAAE,EAAE,EADN;cAEE,EAAE,EAAE,EAFN;cAGE,CAAC,EAAE,CAHL;cAIE,CAAC,EAAGhB,WAAW,GAAGM,GAAf,GAAsB,GAJ3B;cAKE,EAAE,EACAU,SAAS,GACL,aADK,GAELD,SAAS,GACT,aADS,GAET,aAVR;cAYE,OAAO,EAAC,IAZV;cAaE,KAAK,EAAE;gBACLE,SAAS,EAAE,CACT;kBACEC,KAAK,EAAEF,SAAS,GAAG,IAAH,GAAU;gBAD5B,CADS;cADN,CAbT;cAoBE,KAAK,EAAE;gBACLG,QAAQ,EAAE,IADL;gBAELC,UAAU,EAAE,MAFP;gBAGLC,KAAK,EAAE,aAHF;gBAILC,SAAS,EAAE,QAJN;gBAKLC,aAAa,EAAE;cALV,CApBT;cAAA,UA4BGZ,IAAI,CAACa;YA5BR,EADF;UAgCD;QAlCH,EADF;MAsCD;IA5CH;EADF,EADF;AAkDD,CAnDD;;AAqDA,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;EAC/BjB,SAAS,EAAE;IACTkB,IAAI,EAAE,CADG;IAETC,UAAU,EAAE,QAFH;IAGTzB,KAAK,EAAEH;EAHE,CADoB;EAM/BU,IAAI,EAAE;IACJmB,UAAU,EAAE;EADR;AANyB,CAAlB,CAAf;AAWA,eAAezB,QAAf"},"metadata":{},"sourceType":"module"}