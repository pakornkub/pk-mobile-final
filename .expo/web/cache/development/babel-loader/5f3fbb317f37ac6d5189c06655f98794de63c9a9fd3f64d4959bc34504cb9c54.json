{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"shouldFocusWrap\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useId as $1Hnir$useId, mergeProps as $1Hnir$mergeProps, filterDOMProps as $1Hnir$filterDOMProps, useSlotId as $1Hnir$useSlotId } from \"@react-aria/utils\";\nimport { useLongPress as $1Hnir$useLongPress, usePress as $1Hnir$usePress, useHover as $1Hnir$useHover, isFocusVisible as $1Hnir$isFocusVisible } from \"@react-aria/interactions\";\nimport { useMessageFormatter as $1Hnir$useMessageFormatter } from \"@react-aria/i18n\";\nimport { useOverlayTrigger as $1Hnir$useOverlayTrigger } from \"@react-aria/overlays\";\nimport { useSelectableList as $1Hnir$useSelectableList, useSelectableItem as $1Hnir$useSelectableItem } from \"@react-aria/selection\";\nimport { getItemCount as $1Hnir$getItemCount } from \"@react-stately/collections\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar $168583247155ddda$exports = {};\n$parcel$export($168583247155ddda$exports, \"useMenuTrigger\", function () {\n  return $168583247155ddda$export$dc9c12ed27dd1b49;\n});\nvar $9bdd31893c9700c3$exports = {};\nvar $c0398ad35c3639b7$exports = {};\n$c0398ad35c3639b7$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة\\\"}\");\nvar $7af657c4165927c3$exports = {};\n$7af657c4165927c3$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто\\\"}\");\nvar $d95d4da6d531ab81$exports = {};\n$d95d4da6d531ab81$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku\\\"}\");\nvar $24ebda9c775dca17$exports = {};\n$24ebda9c775dca17$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Langt tryk eller tryk på Alt + pil ned for at åbne menuen\\\"}\");\nvar $743e0dfca6cab1e9$exports = {};\n$743e0dfca6cab1e9$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen\\\"}\");\nvar $a2f41026e05f1c84$exports = {};\n$a2f41026e05f1c84$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού\\\"}\");\nvar $43b800e97c901737$exports = {};\n$43b800e97c901737$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Long press or press Alt + ArrowDown to open menu\\\"}\");\nvar $442f5f6ac211e29f$exports = {};\n$442f5f6ac211e29f$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú\\\"}\");\nvar $dff280acfeb2d8ac$exports = {};\n$dff280acfeb2d8ac$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool\\\"}\");\nvar $51608325613944d7$exports = {};\n$51608325613944d7$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli\\\"}\");\nvar $c4a1b1eabeaa87be$exports = {};\n$c4a1b1eabeaa87be$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.\\\"}\");\nvar $8c74815cdee18d1b$exports = {};\n$8c74815cdee18d1b$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט\\\"}\");\nvar $fd0e9ef6a7fe0ec9$exports = {};\n$fd0e9ef6a7fe0ec9$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika\\\"}\");\nvar $a89a74a39eba465a$exports = {};\n$a89a74a39eba465a$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához\\\"}\");\nvar $edc7c66594a0ae8a$exports = {};\n$edc7c66594a0ae8a$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Premere a lungo o premere Alt + Freccia giù per aprire il menu\\\"}\");\nvar $f1ab51510712db52$exports = {};\n$f1ab51510712db52$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"長押しまたは Alt+下矢印キーでメニューを開く\\\"}\");\nvar $f9b672d9b82fa3d6$exports = {};\n$f9b672d9b82fa3d6$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기\\\"}\");\nvar $a385f3910feda499$exports = {};\n$a385f3910feda499$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.\\\"}\");\nvar $4f1bde932c441789$exports = {};\n$4f1bde932c441789$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa\\\"}\");\nvar $914a51a8a594d5be$exports = {};\n$914a51a8a594d5be$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Langt trykk eller trykk Alt + PilNed for å åpne menyen\\\"}\");\nvar $89aaf803103bb500$exports = {};\n$89aaf803103bb500$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen\\\"}\");\nvar $c685891476dbaaca$exports = {};\n$c685891476dbaaca$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu\\\"}\");\nvar $885879b9b10c2959$exports = {};\n$885879b9b10c2959$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu\\\"}\");\nvar $6b39616688a51692$exports = {};\n$6b39616688a51692$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu\\\"}\");\nvar $f26362aed63f47e2$exports = {};\n$f26362aed63f47e2$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul\\\"}\");\nvar $06cbade644558bf0$exports = {};\n$06cbade644558bf0$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню\\\"}\");\nvar $0a391ff68f9d59b1$exports = {};\n$0a391ff68f9d59b1$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol\\\"}\");\nvar $8193cf0e649c7928$exports = {};\n$8193cf0e649c7928$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol\\\"}\");\nvar $f398debcce5a5c55$exports = {};\n$f398debcce5a5c55$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni\\\"}\");\nvar $9e9fef000aa4c013$exports = {};\n$9e9fef000aa4c013$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn\\\"}\");\nvar $c016c8183bbe3d68$exports = {};\n$c016c8183bbe3d68$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın\\\"}\");\nvar $ca4f6c8462244e62$exports = {};\n$ca4f6c8462244e62$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню\\\"}\");\nvar $2d9960c02ccac927$exports = {};\n$2d9960c02ccac927$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"长按或按 Alt + 向下方向键以打开菜单\\\"}\");\nvar $f1b682a4c8c5631c$exports = {};\n$f1b682a4c8c5631c$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"長按或按 Alt+向下鍵以開啟功能表\\\"}\");\n$9bdd31893c9700c3$exports = {\n  \"ar-AE\": $c0398ad35c3639b7$exports,\n  \"bg-BG\": $7af657c4165927c3$exports,\n  \"cs-CZ\": $d95d4da6d531ab81$exports,\n  \"da-DK\": $24ebda9c775dca17$exports,\n  \"de-DE\": $743e0dfca6cab1e9$exports,\n  \"el-GR\": $a2f41026e05f1c84$exports,\n  \"en-US\": $43b800e97c901737$exports,\n  \"es-ES\": $442f5f6ac211e29f$exports,\n  \"et-EE\": $dff280acfeb2d8ac$exports,\n  \"fi-FI\": $51608325613944d7$exports,\n  \"fr-FR\": $c4a1b1eabeaa87be$exports,\n  \"he-IL\": $8c74815cdee18d1b$exports,\n  \"hr-HR\": $fd0e9ef6a7fe0ec9$exports,\n  \"hu-HU\": $a89a74a39eba465a$exports,\n  \"it-IT\": $edc7c66594a0ae8a$exports,\n  \"ja-JP\": $f1ab51510712db52$exports,\n  \"ko-KR\": $f9b672d9b82fa3d6$exports,\n  \"lt-LT\": $a385f3910feda499$exports,\n  \"lv-LV\": $4f1bde932c441789$exports,\n  \"nb-NO\": $914a51a8a594d5be$exports,\n  \"nl-NL\": $89aaf803103bb500$exports,\n  \"pl-PL\": $c685891476dbaaca$exports,\n  \"pt-BR\": $885879b9b10c2959$exports,\n  \"pt-PT\": $6b39616688a51692$exports,\n  \"ro-RO\": $f26362aed63f47e2$exports,\n  \"ru-RU\": $06cbade644558bf0$exports,\n  \"sk-SK\": $0a391ff68f9d59b1$exports,\n  \"sl-SI\": $8193cf0e649c7928$exports,\n  \"sr-SP\": $f398debcce5a5c55$exports,\n  \"sv-SE\": $9e9fef000aa4c013$exports,\n  \"tr-TR\": $c016c8183bbe3d68$exports,\n  \"uk-UA\": $ca4f6c8462244e62$exports,\n  \"zh-CN\": $2d9960c02ccac927$exports,\n  \"zh-TW\": $f1b682a4c8c5631c$exports\n};\nfunction $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {\n  var _props$type = props.type,\n    type = _props$type === void 0 ? 'menu' : _props$type,\n    isDisabled = props.isDisabled,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? 'press' : _props$trigger;\n  var menuTriggerId = $1Hnir$useId();\n  var _$1Hnir$useOverlayTri = $1Hnir$useOverlayTrigger({\n      type: type\n    }, state, ref),\n    triggerProps = _$1Hnir$useOverlayTri.triggerProps,\n    overlayProps = _$1Hnir$useOverlayTri.overlayProps;\n  var onKeyDown = function onKeyDown(e) {\n    if (isDisabled) return;\n    if (trigger === 'longPress' && !e.altKey) return;\n    if (ref && ref.current) switch (e.key) {\n      case 'Enter':\n      case ' ':\n        if (trigger === 'longPress') return;\n      case 'ArrowDown':\n        if (!('continuePropagation' in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle('first');\n        break;\n      case 'ArrowUp':\n        if (!('continuePropagation' in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle('last');\n        break;\n    }\n  };\n  var formatMessage = $1Hnir$useMessageFormatter($parcel$interopDefault($9bdd31893c9700c3$exports));\n  var _$1Hnir$useLongPress = $1Hnir$useLongPress({\n      isDisabled: isDisabled || trigger !== 'longPress',\n      accessibilityDescription: formatMessage('longPressMessage'),\n      onLongPressStart: function onLongPressStart() {\n        state.close();\n      },\n      onLongPress: function onLongPress() {\n        state.open('first');\n      }\n    }),\n    longPressProps = _$1Hnir$useLongPress.longPressProps;\n  var pressProps = {\n    onPressStart: function onPressStart(e) {\n      if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) state.toggle(e.pointerType === 'virtual' ? 'first' : null);\n    },\n    onPress: function onPress(e) {\n      if (e.pointerType === 'touch' && !isDisabled) state.toggle();\n    }\n  };\n  triggerProps = $1Hnir$mergeProps(triggerProps, trigger === 'press' ? pressProps : longPressProps);\n  return {\n    menuTriggerProps: _objectSpread(_objectSpread({}, triggerProps), {}, {\n      id: menuTriggerId,\n      onKeyDown: onKeyDown\n    }),\n    menuProps: _objectSpread(_objectSpread({}, overlayProps), {}, {\n      'aria-labelledby': menuTriggerId\n    })\n  };\n}\nvar $d5336fe17ce95402$exports = {};\n$parcel$export($d5336fe17ce95402$exports, \"useMenu\", function () {\n  return $d5336fe17ce95402$export$38eaa17faae8f579;\n});\nfunction $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {\n  var _props$shouldFocusWra = props.shouldFocusWrap,\n    shouldFocusWrap = _props$shouldFocusWra === void 0 ? true : _props$shouldFocusWra,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  var domProps = $1Hnir$filterDOMProps(props, {\n    labelable: true\n  });\n  var _$1Hnir$useSelectable = $1Hnir$useSelectableList(_objectSpread(_objectSpread({}, otherProps), {}, {\n      ref: ref,\n      selectionManager: state.selectionManager,\n      collection: state.collection,\n      disabledKeys: state.disabledKeys,\n      shouldFocusWrap: shouldFocusWrap\n    })),\n    listProps = _$1Hnir$useSelectable.listProps;\n  return {\n    menuProps: $1Hnir$mergeProps(domProps, _objectSpread({\n      role: 'menu'\n    }, listProps))\n  };\n}\nvar $a2e5df62f93c7633$exports = {};\n$parcel$export($a2e5df62f93c7633$exports, \"useMenuItem\", function () {\n  return $a2e5df62f93c7633$export$9d32628fc2aea7da;\n});\nfunction $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {\n  var isSelected = props.isSelected,\n    isDisabled = props.isDisabled,\n    key = props.key,\n    onClose = props.onClose,\n    closeOnSelect = props.closeOnSelect,\n    isVirtualized = props.isVirtualized,\n    onAction = props.onAction;\n  var role = 'menuitem';\n  if (state.selectionManager.selectionMode === 'single') role = 'menuitemradio';else if (state.selectionManager.selectionMode === 'multiple') role = 'menuitemcheckbox';\n  var labelId = $1Hnir$useSlotId();\n  var descriptionId = $1Hnir$useSlotId();\n  var keyboardId = $1Hnir$useSlotId();\n  var ariaProps = {\n    'aria-disabled': isDisabled,\n    role: role,\n    'aria-label': props['aria-label'],\n    'aria-labelledby': labelId,\n    'aria-describedby': [descriptionId, keyboardId].filter(Boolean).join(' ') || undefined\n  };\n  if (state.selectionManager.selectionMode !== 'none') ariaProps['aria-checked'] = isSelected;\n  if (isVirtualized) {\n    ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n    ariaProps['aria-setsize'] = $1Hnir$getItemCount(state.collection);\n  }\n  var onKeyDown = function onKeyDown(e) {\n    if (e.repeat) return;\n    switch (e.key) {\n      case ' ':\n        if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) onClose();\n        break;\n      case 'Enter':\n        if (!isDisabled && closeOnSelect !== false && onClose) onClose();\n        break;\n    }\n  };\n  var onPressStart = function onPressStart(e) {\n    if (e.pointerType === 'keyboard' && onAction) onAction(key);\n  };\n  var onPressUp = function onPressUp(e) {\n    if (e.pointerType !== 'keyboard') {\n      if (onAction) onAction(key);\n      if (onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : state.selectionManager.selectionMode !== 'multiple')) onClose();\n    }\n  };\n  var _$1Hnir$useSelectable2 = $1Hnir$useSelectableItem({\n      selectionManager: state.selectionManager,\n      key: key,\n      ref: ref,\n      shouldSelectOnPressUp: true,\n      allowsDifferentPressOrigin: true\n    }),\n    itemProps = _$1Hnir$useSelectable2.itemProps;\n  var _$1Hnir$usePress = $1Hnir$usePress({\n      onPressStart: onPressStart,\n      onPressUp: onPressUp,\n      isDisabled: isDisabled\n    }),\n    pressProps = _$1Hnir$usePress.pressProps;\n  var _$1Hnir$useHover = $1Hnir$useHover({\n      isDisabled: isDisabled,\n      onHoverStart: function onHoverStart() {\n        if (!$1Hnir$isFocusVisible()) {\n          state.selectionManager.setFocused(true);\n          state.selectionManager.setFocusedKey(key);\n        }\n      }\n    }),\n    hoverProps = _$1Hnir$useHover.hoverProps;\n  return {\n    menuItemProps: _objectSpread(_objectSpread({}, ariaProps), $1Hnir$mergeProps(itemProps, pressProps, hoverProps, {\n      onKeyDown: onKeyDown\n    })),\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    keyboardShortcutProps: {\n      id: keyboardId\n    }\n  };\n}\nvar $3e5eb2498db5b506$exports = {};\n$parcel$export($3e5eb2498db5b506$exports, \"useMenuSection\", function () {\n  return $3e5eb2498db5b506$export$73f7a44322579622;\n});\nfunction $3e5eb2498db5b506$export$73f7a44322579622(props) {\n  var heading = props.heading,\n    ariaLabel = props['aria-label'];\n  var headingId = $1Hnir$useId();\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      id: headingId,\n      'aria-hidden': true\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\nexport { $168583247155ddda$export$dc9c12ed27dd1b49 as useMenuTrigger, $d5336fe17ce95402$export$38eaa17faae8f579 as useMenu, $a2e5df62f93c7633$export$9d32628fc2aea7da as useMenuItem, $3e5eb2498db5b506$export$73f7a44322579622 as useMenuSection };","map":{"version":3,"names":["$c0398ad35c3639b7$exports","JSON","parse","$7af657c4165927c3$exports","$d95d4da6d531ab81$exports","$24ebda9c775dca17$exports","$743e0dfca6cab1e9$exports","$a2f41026e05f1c84$exports","$43b800e97c901737$exports","$442f5f6ac211e29f$exports","$dff280acfeb2d8ac$exports","$51608325613944d7$exports","$c4a1b1eabeaa87be$exports","$8c74815cdee18d1b$exports","$fd0e9ef6a7fe0ec9$exports","$a89a74a39eba465a$exports","$edc7c66594a0ae8a$exports","$f1ab51510712db52$exports","$f9b672d9b82fa3d6$exports","$a385f3910feda499$exports","$4f1bde932c441789$exports","$914a51a8a594d5be$exports","$89aaf803103bb500$exports","$c685891476dbaaca$exports","$885879b9b10c2959$exports","$6b39616688a51692$exports","$f26362aed63f47e2$exports","$06cbade644558bf0$exports","$0a391ff68f9d59b1$exports","$8193cf0e649c7928$exports","$f398debcce5a5c55$exports","$9e9fef000aa4c013$exports","$c016c8183bbe3d68$exports","$ca4f6c8462244e62$exports","$2d9960c02ccac927$exports","$f1b682a4c8c5631c$exports","$9bdd31893c9700c3$exports","$168583247155ddda$export$dc9c12ed27dd1b49","props","state","ref","_props$type","type","isDisabled","_props$trigger","trigger","menuTriggerId","$1Hnir$useId","_$1Hnir$useOverlayTri","$1Hnir$useOverlayTrigger","triggerProps","overlayProps","onKeyDown","e","altKey","current","key","stopPropagation","preventDefault","toggle","formatMessage","$1Hnir$useMessageFormatter","$parcel$interopDefault","_$1Hnir$useLongPress","$1Hnir$useLongPress","accessibilityDescription","onLongPressStart","close","onLongPress","open","longPressProps","pressProps","onPressStart","pointerType","onPress","$1Hnir$mergeProps","menuTriggerProps","_objectSpread","id","menuProps","$d5336fe17ce95402$export$38eaa17faae8f579","_props$shouldFocusWra","shouldFocusWrap","otherProps","_objectWithoutProperties","_excluded","console","warn","domProps","$1Hnir$filterDOMProps","labelable","_$1Hnir$useSelectable","$1Hnir$useSelectableList","selectionManager","collection","disabledKeys","listProps","role","$a2e5df62f93c7633$export$9d32628fc2aea7da","isSelected","onClose","closeOnSelect","isVirtualized","onAction","selectionMode","labelId","$1Hnir$useSlotId","descriptionId","keyboardId","ariaProps","filter","Boolean","join","undefined","getItem","index","$1Hnir$getItemCount","repeat","onPressUp","_$1Hnir$useSelectable2","$1Hnir$useSelectableItem","shouldSelectOnPressUp","allowsDifferentPressOrigin","itemProps","_$1Hnir$usePress","$1Hnir$usePress","_$1Hnir$useHover","$1Hnir$useHover","onHoverStart","$1Hnir$isFocusVisible","setFocused","setFocusedKey","hoverProps","menuItemProps","labelProps","descriptionProps","keyboardShortcutProps","$3e5eb2498db5b506$export$73f7a44322579622","heading","ariaLabel","headingId","headingProps","groupProps"],"sources":["D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\src\\index.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\src\\useMenuTrigger.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\*.js","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\ar-AE.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\bg-BG.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\cs-CZ.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\da-DK.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\de-DE.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\el-GR.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\en-US.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\es-ES.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\et-EE.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\fi-FI.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\fr-FR.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\he-IL.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\hr-HR.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\hu-HU.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\it-IT.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\ja-JP.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\ko-KR.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\lt-LT.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\lv-LV.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\nb-NO.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\nl-NL.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\pl-PL.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\pt-BR.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\pt-PT.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\ro-RO.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\ru-RU.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\sk-SK.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\sl-SI.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\sr-SP.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\sv-SE.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\tr-TR.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\uk-UA.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\zh-CN.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\intl\\zh-TW.json","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\src\\useMenu.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\src\\useMenuItem.ts","D:\\_Dev\\expo\\pk-mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\src\\useMenuSection.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useMenuTrigger';\nexport * from './useMenu';\nexport * from './useMenuItem';\nexport * from './useMenuSection';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {HTMLAttributes, RefObject} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MenuTriggerState} from '@react-stately/menu';\nimport {MenuTriggerType} from '@react-types/menu';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport {useLongPress} from '@react-aria/interactions';\nimport {useMessageFormatter} from '@react-aria/i18n';\nimport {useOverlayTrigger} from '@react-aria/overlays';\n\ninterface MenuTriggerAriaProps {\n  /** The type of menu that the menu trigger opens. */\n  type?: 'menu' | 'listbox',\n  /** Whether menu trigger is disabled. */\n  isDisabled?: boolean,\n  /** How menu is triggered. */\n  trigger?: MenuTriggerType\n}\n\ninterface MenuTriggerAria {\n  /** Props for the menu trigger element. */\n  menuTriggerProps: AriaButtonProps,\n\n  /** Props for the menu. */\n  menuProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a menu trigger.\n * @param props - Props for the menu trigger.\n * @param state - State for the menu trigger.\n */\nexport function useMenuTrigger(props: MenuTriggerAriaProps, state: MenuTriggerState, ref: RefObject<HTMLElement>): MenuTriggerAria {\n  let {\n    type = 'menu' as MenuTriggerAriaProps['type'],\n    isDisabled,\n    trigger = 'press'\n  } = props;\n\n  let menuTriggerId = useId();\n  let {triggerProps, overlayProps} = useOverlayTrigger({type}, state, ref);\n\n  let onKeyDown = (e) => {\n    if (isDisabled) {\n      return;\n    }\n\n    if (trigger === 'longPress' && !e.altKey) {\n      return;\n    }\n\n    if (ref && ref.current) {\n      switch (e.key) {\n        case 'Enter':\n        case ' ':\n          if (trigger === 'longPress') {\n            return;\n          }\n          // fallthrough\n        case 'ArrowDown':\n          // Stop propagation, unless it would already be handled by useKeyboard.\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('first');\n          break;\n        case 'ArrowUp':\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('last');\n          break;\n      }\n    }\n  };\n\n  let formatMessage = useMessageFormatter(intlMessages);\n  let {longPressProps} = useLongPress({\n    isDisabled: isDisabled || trigger !== 'longPress',\n    accessibilityDescription: formatMessage('longPressMessage'),\n    onLongPressStart() {\n      state.close();\n    },\n    onLongPress() {\n      state.open('first');\n    }\n  });\n\n  let pressProps =  {\n    onPressStart(e) {\n      // For consistency with native, open the menu on mouse/key down, but touch up.\n      if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) {\n        // If opened with a screen reader, auto focus the first item.\n        // Otherwise, the menu itself will be focused.\n        state.toggle(e.pointerType === 'virtual' ? 'first' : null);\n      }\n    },\n    onPress(e) {\n      if (e.pointerType === 'touch' && !isDisabled) {\n        state.toggle();\n      }\n    }\n  };\n\n  triggerProps = mergeProps(triggerProps, trigger === 'press' ? pressProps : longPressProps);\n\n  return {\n    menuTriggerProps: {\n      ...triggerProps,\n      id: menuTriggerId,\n      onKeyDown\n    },\n    menuProps: {\n      ...overlayProps,\n      'aria-labelledby': menuTriggerId\n    }\n  };\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"longPressMessage\": \"اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة\"\n}\n","{\n  \"longPressMessage\": \"Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто\"\n}\n","{\n  \"longPressMessage\": \"Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku\"\n}\n","{\n  \"longPressMessage\": \"Langt tryk eller tryk på Alt + pil ned for at åbne menuen\"\n}\n","{\n  \"longPressMessage\": \"Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen\"\n}\n","{\n  \"longPressMessage\": \"Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού\"\n}\n","{\n  \"longPressMessage\": \"Long press or press Alt + ArrowDown to open menu\"\n}\n","{\n  \"longPressMessage\": \"Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú\"\n}\n","{\n  \"longPressMessage\": \"Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool\"\n}\n","{\n  \"longPressMessage\": \"Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli\"\n}\n","{\n  \"longPressMessage\": \"Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.\"\n}\n","{\n  \"longPressMessage\": \"לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט\"\n}\n","{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika\"\n}\n","{\n  \"longPressMessage\": \"Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához\"\n}\n","{\n  \"longPressMessage\": \"Premere a lungo o premere Alt + Freccia giù per aprire il menu\"\n}\n","{\n  \"longPressMessage\": \"長押しまたは Alt+下矢印キーでメニューを開く\"\n}\n","{\n  \"longPressMessage\": \"길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기\"\n}\n","{\n  \"longPressMessage\": \"Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.\"\n}\n","{\n  \"longPressMessage\": \"Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa\"\n}\n","{\n  \"longPressMessage\": \"Langt trykk eller trykk Alt + PilNed for å åpne menyen\"\n}\n","{\n  \"longPressMessage\": \"Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen\"\n}\n","{\n  \"longPressMessage\": \"Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu\"\n}\n","{\n  \"longPressMessage\": \"Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu\"\n}\n","{\n  \"longPressMessage\": \"Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu\"\n}\n","{\n  \"longPressMessage\": \"Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul\"\n}\n","{\n  \"longPressMessage\": \"Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню\"\n}\n","{\n  \"longPressMessage\": \"Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol\"\n}\n","{\n  \"longPressMessage\": \"Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol\"\n}\n","{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni\"\n}\n","{\n  \"longPressMessage\": \"Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn\"\n}\n","{\n  \"longPressMessage\": \"Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın\"\n}\n","{\n  \"longPressMessage\": \"Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню\"\n}\n","{\n  \"longPressMessage\": \"长按或按 Alt + 向下方向键以打开菜单\"\n}\n","{\n  \"longPressMessage\": \"長按或按 Alt+向下鍵以開啟功能表\"\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaMenuProps} from '@react-types/menu';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {KeyboardDelegate} from '@react-types/shared';\nimport {TreeState} from '@react-stately/tree';\nimport {useSelectableList} from '@react-aria/selection';\n\ninterface MenuAria {\n  /** Props for the menu element. */\n  menuProps: HTMLAttributes<HTMLElement>\n}\n\ninterface AriaMenuOptions<T> extends AriaMenuProps<T> {\n  /** Whether the menu uses virtual scrolling. */\n  isVirtualized?: boolean,\n\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate\n}\n\n/**\n * Provides the behavior and accessibility implementation for a menu component.\n * A menu displays a list of actions or options that a user can choose.\n * @param props - Props for the menu.\n * @param state - State for the menu, as returned by `useListState`.\n */\nexport function useMenu<T>(props: AriaMenuOptions<T>, state: TreeState<T>, ref: RefObject<HTMLElement>): MenuAria {\n  let {\n    shouldFocusWrap = true,\n    ...otherProps\n  } = props;\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let {listProps} = useSelectableList({\n    ...otherProps,\n    ref,\n    selectionManager: state.selectionManager,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    shouldFocusWrap\n  });\n\n  return {\n    menuProps: mergeProps(domProps, {\n      role: 'menu',\n      ...listProps\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getItemCount} from '@react-stately/collections';\nimport {HTMLAttributes, Key, RefObject} from 'react';\nimport {isFocusVisible, useHover, usePress} from '@react-aria/interactions';\nimport {mergeProps, useSlotId} from '@react-aria/utils';\nimport {PressEvent} from '@react-types/shared';\nimport {TreeState} from '@react-stately/tree';\nimport {useSelectableItem} from '@react-aria/selection';\n\ninterface MenuItemAria {\n  /** Props for the menu item element. */\n  menuItemProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the main text element inside the menu item. */\n  labelProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the description text element inside the menu item, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the keyboard shortcut text element inside the item, if any. */\n  keyboardShortcutProps: HTMLAttributes<HTMLElement>\n}\n\ninterface AriaMenuItemProps {\n  /** Whether the menu item is disabled. */\n  isDisabled?: boolean,\n\n  /** Whether the menu item is selected. */\n  isSelected?: boolean,\n\n  /** A screen reader only label for the menu item. */\n  'aria-label'?: string,\n\n  /** The unique key for the menu item. */\n  key?: Key,\n\n  /** Handler that is called when the menu should close after selecting an item. */\n  onClose?: () => void,\n\n  /**\n   * Whether the menu should close when the menu item is selected.\n   * @default true\n   */\n  closeOnSelect?: boolean,\n\n  /** Whether the menu item is contained in a virtual scrolling menu. */\n  isVirtualized?: boolean,\n\n  /** Handler that is called when the user activates the item. */\n  onAction?: (key: Key) => void\n}\n\n/**\n * Provides the behavior and accessibility implementation for an item in a menu.\n * See `useMenu` for more details about menus.\n * @param props - Props for the item.\n * @param state - State for the menu, as returned by `useTreeState`.\n */\nexport function useMenuItem<T>(props: AriaMenuItemProps, state: TreeState<T>, ref: RefObject<HTMLElement>): MenuItemAria {\n  let {\n    isSelected,\n    isDisabled,\n    key,\n    onClose,\n    closeOnSelect,\n    isVirtualized,\n    onAction\n  } = props;\n\n  let role = 'menuitem';\n  if (state.selectionManager.selectionMode === 'single') {\n    role = 'menuitemradio';\n  } else if (state.selectionManager.selectionMode === 'multiple') {\n    role = 'menuitemcheckbox';\n  }\n\n  let labelId = useSlotId();\n  let descriptionId = useSlotId();\n  let keyboardId = useSlotId();\n\n  let ariaProps = {\n    'aria-disabled': isDisabled,\n    role,\n    'aria-label': props['aria-label'],\n    'aria-labelledby': labelId,\n    'aria-describedby': [descriptionId, keyboardId].filter(Boolean).join(' ') || undefined\n  };\n\n  if (state.selectionManager.selectionMode !== 'none') {\n    ariaProps['aria-checked'] = isSelected;\n  }\n\n  if (isVirtualized) {\n    ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n    ariaProps['aria-setsize'] = getItemCount(state.collection);\n  }\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    // Ignore repeating events, which may have started on the menu trigger before moving\n    // focus to the menu item. We want to wait for a second complete key press sequence.\n    if (e.repeat) {\n      return;\n    }\n\n    switch (e.key) {\n      case ' ':\n        if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) {\n          onClose();\n        }\n        break;\n      case 'Enter':\n        // The Enter key should always close on select, except if overridden.\n        if (!isDisabled && closeOnSelect !== false && onClose) {\n          onClose();\n        }\n        break;\n    }\n  };\n\n  let onPressStart = (e: PressEvent) => {\n    if (e.pointerType === 'keyboard' && onAction) {\n      onAction(key);\n    }\n  };\n\n  let onPressUp = (e: PressEvent) => {\n    if (e.pointerType !== 'keyboard') {\n      if (onAction) {\n        onAction(key);\n      }\n\n      // Pressing a menu item should close by default in single selection mode but not multiple\n      // selection mode, except if overridden by the closeOnSelect prop.\n      if (onClose && (closeOnSelect ?? state.selectionManager.selectionMode !== 'multiple')) {\n        onClose();\n      }\n    }\n  };\n\n  let {itemProps} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key,\n    ref,\n    shouldSelectOnPressUp: true,\n    allowsDifferentPressOrigin: true\n  });\n\n  let {pressProps} = usePress({onPressStart, onPressUp, isDisabled});\n  let {hoverProps} = useHover({\n    isDisabled,\n    onHoverStart() {\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocused(true);\n        state.selectionManager.setFocusedKey(key);\n      }\n    }\n  });\n\n  return {\n    menuItemProps: {\n      ...ariaProps,\n      ...mergeProps(itemProps, pressProps, hoverProps, {onKeyDown})\n    },\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    keyboardShortcutProps: {\n      id: keyboardId\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes, ReactNode} from 'react';\nimport {useId} from '@react-aria/utils';\n\ninterface AriaMenuSectionProps {\n  /** The heading for the section. */\n  heading?: ReactNode,\n  /** An accessibility label for the section. Required if `heading` is not present. */\n  'aria-label'?: string\n}\n\ninterface MenuSectionAria {\n  /** Props for the wrapper list item. */\n  itemProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the heading element, if any. */\n  headingProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the group element. */\n  groupProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a section in a menu.\n * See `useMenu` for more details about menus.\n * @param props - Props for the section.\n */\nexport function useMenuSection(props: AriaMenuSectionProps): MenuSectionAria {\n  let {heading, 'aria-label': ariaLabel} = props;\n  let headingId = useId();\n\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      // Techincally, menus cannot contain headings according to ARIA.\n      // We hide the heading from assistive technology, and only use it\n      // as a label for the nested group.\n      id: headingId,\n      'aria-hidden': true\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}