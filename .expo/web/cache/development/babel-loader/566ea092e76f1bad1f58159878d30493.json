{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, Suspense } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport jwt_decode from \"jwt-decode\";\nimport { setAuth, selectAuth } from \"../../contexts/slices/authSlice\";\nimport { getCurrentTimeStamp } from \"../../utils/date\";\nimport { expireTime } from \"../../configs/token\";\nimport Menu from \"../Menu\";\nimport CheckStock from \"../CheckStock\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = React.lazy(function () {\n  return import(\"../Login\");\n});\n\nvar getTimeFromToken = function getTimeFromToken(token) {\n  var _ref = token ? jwt_decode(token) : 0,\n      time = _ref.time;\n\n  return time;\n};\n\nvar Main = function Main() {\n  var Stack = createStackNavigator();\n\n  var _useSelector = useSelector(selectAuth),\n      authResult = _useSelector.authResult;\n\n  var dispatch = useDispatch();\n\n  var validateToken = function _callee() {\n    var auth, accessTime, currentTime;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.t0 = JSON;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"auth\"));\n\n          case 4:\n            _context.t1 = _context.sent;\n\n            if (_context.t1) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.t1 = \"{}\";\n\n          case 7:\n            _context.t2 = _context.t1;\n            auth = _context.t0.parse.call(_context.t0, _context.t2);\n\n            if (auth.status) {\n              accessTime = getTimeFromToken(auth.data.token);\n              currentTime = getCurrentTimeStamp();\n\n              if (currentTime - accessTime > expireTime) {\n                Alert.alert(\"Alert\", \"Your token is expired, please login again\", [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    dispatch(setAuth({}));\n                  }\n                }]);\n              }\n\n              dispatch(setAuth(auth));\n            } else {\n              dispatch(setAuth({}));\n            }\n\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t3 = _context[\"catch\"](0);\n            console.log(_context.t3);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  useEffect(function () {\n    validateToken();\n  }, []);\n  return _jsx(_Fragment, {\n    children: _jsx(Suspense, {\n      fallback: _jsx(\"div\", {\n        children: \"Loading...\"\n      }),\n      children: _jsx(Stack.Navigator, {\n        children: authResult != null && authResult.status ? _jsxs(_Fragment, {\n          children: [_jsx(Stack.Screen, {\n            name: \"Menu\",\n            component: Menu\n          }), _jsx(Stack.Screen, {\n            name: \"CheckStock\",\n            component: CheckStock\n          })]\n        }) : _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        })\n      })\n    })\n  });\n};\n\nexport default Main;","map":{"version":3,"names":["React","useEffect","Suspense","useDispatch","useSelector","createStackNavigator","AsyncStorage","jwt_decode","setAuth","selectAuth","getCurrentTimeStamp","expireTime","Menu","CheckStock","Login","lazy","getTimeFromToken","token","time","Main","Stack","authResult","dispatch","validateToken","JSON","getItem","auth","parse","status","accessTime","data","currentTime","Alert","alert","text","onPress","console","log"],"sources":["D:/Dev/pk-mobile/src/views/Main/Main.tsx"],"sourcesContent":["import React, { useEffect, useState, Suspense } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Alert } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { setAuth, selectAuth } from \"../../contexts/slices/authSlice\";\n\nimport { getCurrentTimeStamp } from \"../../utils/date\";\nimport { expireTime } from \"../../configs/token\";\n\nimport Menu from \"../Menu\";\nimport CheckStock from \"../CheckStock\";\n\nconst Login = React.lazy(() => import(\"../Login\"));\n\nconst getTimeFromToken = (token: string): number => {\n  const { time }: any = token ? jwt_decode(token) : 0;\n  return time;\n};\n\nconst Main: React.FC = () => {\n  const Stack: any = createStackNavigator();\n\n  const { authResult } = useSelector(selectAuth);\n  const dispatch = useDispatch();\n\n  const validateToken = async () => {\n    try {\n      //? get token, status from AsyncStorage\n      const auth: any = JSON.parse(\n        (await AsyncStorage.getItem(\"auth\")) || \"{}\"\n      );\n\n      if (auth.status) {\n        const accessTime = getTimeFromToken(auth.data.token);\n        const currentTime = getCurrentTimeStamp();\n\n        //? if token is expired\n        if (currentTime - accessTime > expireTime) {\n          Alert.alert(\"Alert\", \"Your token is expired, please login again\", [\n            {\n              text: \"OK\",\n              onPress: () => {\n                dispatch(setAuth({}));\n              },\n            },\n          ]);\n        }\n\n        //? if token is valid\n        dispatch(setAuth(auth));\n      } else {\n        dispatch(setAuth({}));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    validateToken();\n  }, []);\n\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Stack.Navigator>\n          {authResult?.status ? (\n            <>\n              <Stack.Screen name=\"Menu\" component={Menu} />\n              <Stack.Screen name=\"CheckStock\" component={CheckStock} />\n            </>\n          ) : (\n            <Stack.Screen name=\"Login\" component={Login} />\n          )}\n        </Stack.Navigator>\n      </Suspense>\n    </>\n  );\n};\n\nexport default Main;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,OAAT,EAAkBC,UAAlB;AAEA,SAASC,mBAAT;AACA,SAASC,UAAT;AAEA,OAAOC,IAAP;AACA,OAAOC,UAAP;;;;AAEA,IAAMC,KAAK,GAAGd,KAAK,CAACe,IAAN,CAAW;EAAA,OAAM,kBAAN;AAAA,CAAX,CAAd;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAA2B;EAClD,WAAsBA,KAAK,GAAGV,UAAU,CAACU,KAAD,CAAb,GAAuB,CAAlD;EAAA,IAAQC,IAAR,QAAQA,IAAR;;EACA,OAAOA,IAAP;AACD,CAHD;;AAKA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;EAC3B,IAAMC,KAAU,GAAGf,oBAAoB,EAAvC;;EAEA,mBAAuBD,WAAW,CAACK,UAAD,CAAlC;EAAA,IAAQY,UAAR,gBAAQA,UAAR;;EACA,IAAMC,QAAQ,GAAGnB,WAAW,EAA5B;;EAEA,IAAMoB,aAAa,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,cAGAC,IAHA;YAAA;YAAA,iCAITlB,YAAY,CAACmB,OAAb,CAAqB,MAArB,CAJS;;UAAA;YAAA;;YAAA;cAAA;cAAA;YAAA;;YAAA,cAIwB,IAJxB;;UAAA;YAAA;YAGZC,IAHY,eAGKC,KAHL;;YAOlB,IAAID,IAAI,CAACE,MAAT,EAAiB;cACTC,UADS,GACIb,gBAAgB,CAACU,IAAI,CAACI,IAAL,CAAUb,KAAX,CADpB;cAETc,WAFS,GAEKrB,mBAAmB,EAFxB;;cAKf,IAAIqB,WAAW,GAAGF,UAAd,GAA2BlB,UAA/B,EAA2C;gBACzCqB,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqB,2CAArB,EAAkE,CAChE;kBACEC,IAAI,EAAE,IADR;kBAEEC,OAAO,EAAE,mBAAM;oBACbb,QAAQ,CAACd,OAAO,CAAC,EAAD,CAAR,CAAR;kBACD;gBAJH,CADgE,CAAlE;cAQD;;cAGDc,QAAQ,CAACd,OAAO,CAACkB,IAAD,CAAR,CAAR;YACD,CAlBD,MAkBO;cACLJ,QAAQ,CAACd,OAAO,CAAC,EAAD,CAAR,CAAR;YACD;;YA3BiB;YAAA;;UAAA;YAAA;YAAA;YA6BlB4B,OAAO,CAACC,GAAR;;UA7BkB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAtB;;EAiCApC,SAAS,CAAC,YAAM;IACdsB,aAAa;EACd,CAFQ,EAEN,EAFM,CAAT;EAIA,OACE;IAAA,UACE,KAAC,QAAD;MAAU,QAAQ,EAAE;QAAA;MAAA,EAApB;MAAA,UACE,KAAC,KAAD,CAAO,SAAP;QAAA,UACGF,UAAU,QAAV,IAAAA,UAAU,CAAEO,MAAZ,GACC;UAAA,WACE,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAC,MAAnB;YAA0B,SAAS,EAAEhB;UAArC,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;YAAc,IAAI,EAAC,YAAnB;YAAgC,SAAS,EAAEC;UAA3C,EAFF;QAAA,EADD,GAMC,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,OAAnB;UAA2B,SAAS,EAAEC;QAAtC;MAPJ;IADF;EADF,EADF;AAgBD,CA3DD;;AA6DA,eAAeK,IAAf"},"metadata":{},"sourceType":"module"}