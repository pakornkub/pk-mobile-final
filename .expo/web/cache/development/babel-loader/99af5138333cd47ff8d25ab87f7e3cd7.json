{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useDispatch } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport { setAuth } from \"../../contexts/slices/authSlice\";\nimport { getCurrentTimeStamp } from \"../../utils/date\";\nimport { expireTime } from \"../../configs/token\";\nimport Login from \"../Login\";\nimport Menu from \"../Menu\";\nimport CheckStock from \"../CheckStock\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar getTimeFromToken = function getTimeFromToken(token) {\n  var _ref = token ? jwt_decode(token) : 0,\n      time = _ref.time;\n\n  return time;\n};\n\nvar Main = function Main() {\n  var Stack = createStackNavigator();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      login = _useState2[0],\n      setLogin = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var validateToken = function _callee() {\n    var auth, accessStatus, accessToken, accessTime, currentTime;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"auth\"));\n\n          case 3:\n            auth = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"accessStatus\"));\n\n          case 6:\n            accessStatus = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"accessToken\"));\n\n          case 9:\n            accessToken = _context.sent;\n\n            if (accessStatus) {\n              accessTime = getTimeFromToken(String(accessToken));\n              currentTime = getCurrentTimeStamp();\n\n              if (currentTime - accessTime > expireTime) {\n                Alert.alert(\"Alert\", \"Your token is expired, please login again\", [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    dispatch(setAuth({}));\n                    setLogin(false);\n                  }\n                }]);\n              }\n\n              dispatch(setAuth(JSON.parse(auth)));\n              setLogin(true);\n            } else {\n              dispatch(setAuth({}));\n              setLogin(false);\n            }\n\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  useEffect(function () {\n    validateToken();\n  }, []);\n  return _jsx(_Fragment, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login\n      }), _jsx(Stack.Screen, {\n        name: \"Menu\",\n        component: Menu\n      }), _jsx(Stack.Screen, {\n        name: \"CheckStock\",\n        component: CheckStock\n      })]\n    })\n  });\n};\n\nexport default Main;","map":{"version":3,"names":["React","useEffect","useState","createStackNavigator","AsyncStorage","useDispatch","jwt_decode","setAuth","getCurrentTimeStamp","expireTime","Login","Menu","CheckStock","getTimeFromToken","token","time","Main","Stack","login","setLogin","dispatch","validateToken","getItem","auth","accessStatus","accessToken","accessTime","String","currentTime","Alert","alert","text","onPress","JSON","parse","console","log"],"sources":["D:/Dev/pk-mobile/src/views/Main/Main.tsx"],"sourcesContent":["import React, { useEffect,useState } from \"react\";\nimport { Alert } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useDispatch } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { setAuth } from \"../../contexts/slices/authSlice\";\n\nimport { getCurrentTimeStamp } from \"../../utils/date\";\nimport { expireTime} from \"../../configs/token\";\n\nimport Login from \"../Login\";\nimport Menu from \"../Menu\";\nimport CheckStock from \"../CheckStock\";\n\nconst getTimeFromToken = (token: string): number => {\n  const { time }: any = token ? jwt_decode(token) : 0;\n  return time;\n};\n\nconst Main: React.FC = () => {\n\n  const Stack: any = createStackNavigator();\n\n  const [login, setLogin] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  const validateToken = async () => {\n    try {\n\n      //? get token, status from AsyncStorage\n      const auth : any = await AsyncStorage.getItem(\"auth\");\n      const accessStatus = await AsyncStorage.getItem(\"accessStatus\");\n      const accessToken = await AsyncStorage.getItem(\"accessToken\");\n\n      if(accessStatus)\n      {\n        const accessTime = getTimeFromToken(String(accessToken));\n        const currentTime = getCurrentTimeStamp();\n\n        //? if token is expired\n        if (currentTime - accessTime > expireTime) {\n          Alert.alert(\n            \"Alert\",\n            \"Your token is expired, please login again\",\n            [\n              { text: \"OK\", onPress: () => {\n                dispatch(setAuth({}));\n                setLogin(false)\n              } }\n            ]\n          );\n        }\n\n        //? if token is valid\n        dispatch(setAuth(JSON.parse(auth)));\n        setLogin(true)\n\n      }\n      else\n      {\n        dispatch(setAuth({}));\n        setLogin(false)\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    validateToken();\n  }, []);\n\n\n  return (\n    <>\n      <Stack.Navigator>\n        {\n\n  \n\n\n        }\n        <Stack.Screen name=\"Login\" component={Login} />\n        <Stack.Screen name=\"Menu\" component={Menu} />\n        <Stack.Screen name=\"CheckStock\" component={CheckStock} />\n      </Stack.Navigator>\n    </>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,OAAT;AAEA,SAASC,mBAAT;AACA,SAASC,UAAT;AAEA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,UAAP;;;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAA2B;EAClD,WAAsBA,KAAK,GAAGR,UAAU,CAACQ,KAAD,CAAb,GAAuB,CAAlD;EAAA,IAAQC,IAAR,QAAQA,IAAR;;EACA,OAAOA,IAAP;AACD,CAHD;;AAKA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;EAE3B,IAAMC,KAAU,GAAGd,oBAAoB,EAAvC;;EAEA,gBAA0BD,QAAQ,CAAU,KAAV,CAAlC;EAAA;EAAA,IAAOgB,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,QAAQ,GAAGf,WAAW,EAA5B;;EAEA,IAAMgB,aAAa,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAIOjB,YAAY,CAACkB,OAAb,CAAqB,MAArB,CAJP;;UAAA;YAIZC,IAJY;YAAA;YAAA,iCAKSnB,YAAY,CAACkB,OAAb,CAAqB,cAArB,CALT;;UAAA;YAKZE,YALY;YAAA;YAAA,iCAMQpB,YAAY,CAACkB,OAAb,CAAqB,aAArB,CANR;;UAAA;YAMZG,WANY;;YAQlB,IAAGD,YAAH,EACA;cACQE,UADR,GACqBb,gBAAgB,CAACc,MAAM,CAACF,WAAD,CAAP,CADrC;cAEQG,WAFR,GAEsBpB,mBAAmB,EAFzC;;cAKE,IAAIoB,WAAW,GAAGF,UAAd,GAA2BjB,UAA/B,EAA2C;gBACzCoB,KAAK,CAACC,KAAN,CACE,OADF,EAEE,2CAFF,EAGE,CACE;kBAAEC,IAAI,EAAE,IAAR;kBAAcC,OAAO,EAAE,mBAAM;oBAC3BZ,QAAQ,CAACb,OAAO,CAAC,EAAD,CAAR,CAAR;oBACAY,QAAQ,CAAC,KAAD,CAAR;kBACD;gBAHD,CADF,CAHF;cAUD;;cAGDC,QAAQ,CAACb,OAAO,CAAC0B,IAAI,CAACC,KAAL,CAAWX,IAAX,CAAD,CAAR,CAAR;cACAJ,QAAQ,CAAC,IAAD,CAAR;YAED,CAvBD,MAyBA;cACEC,QAAQ,CAACb,OAAO,CAAC,EAAD,CAAR,CAAR;cACAY,QAAQ,CAAC,KAAD,CAAR;YACD;;YApCiB;YAAA;;UAAA;YAAA;YAAA;YAuClBgB,OAAO,CAACC,GAAR;;UAvCkB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAtB;;EA2CAnC,SAAS,CAAC,YAAM;IACdoB,aAAa;EACd,CAFQ,EAEN,EAFM,CAAT;EAKA,OACE;IAAA,UACE,MAAC,KAAD,CAAO,SAAP;MAAA,WAOE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,OAAnB;QAA2B,SAAS,EAAEX;MAAtC,EAPF,EAQE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,MAAnB;QAA0B,SAAS,EAAEC;MAArC,EARF,EASE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,YAAnB;QAAgC,SAAS,EAAEC;MAA3C,EATF;IAAA;EADF,EADF;AAeD,CAvED;;AAyEA,eAAeI,IAAf"},"metadata":{},"sourceType":"module"}