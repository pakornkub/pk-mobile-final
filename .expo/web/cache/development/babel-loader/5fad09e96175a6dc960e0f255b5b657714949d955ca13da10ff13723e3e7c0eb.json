{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { httpClient } from \"../services/axios\";\nexport var useJobRepack = function useJobRepack() {\n  var getJobRepack = function () {\n    var _ref = _asyncToGenerator(function* () {\n      return yield httpClient.get('/job_repack');\n    });\n    return function getJobRepack() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return useQuery(\"JobRepack\", function () {\n    return getJobRepack();\n  }, {\n    enabled: true,\n    refetchOnWindowFocus: true,\n    refetchOnMount: true\n  });\n};\nexport var useJobRepackBOM = function useJobRepackBOM(_ref2) {\n  var JOB_ID = _ref2.JOB_ID;\n  var getJobRepackBOM = function () {\n    var _ref3 = _asyncToGenerator(function* (JOB_ID) {\n      return yield httpClient.get(\"/job_repack_bom?JOB_ID=\" + JOB_ID);\n    });\n    return function getJobRepackBOM(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return useQuery([\"JobRepackBOM\", JOB_ID], function () {\n    return getJobRepackBOM(JOB_ID);\n  }, {\n    enabled: true\n  });\n};\nexport var useExecJobRepackItem = function useExecJobRepackItem() {\n  var queryClient = useQueryClient();\n  var execJobRepackItem = function () {\n    var _ref4 = _asyncToGenerator(function* (params) {\n      var data = new FormData();\n      Object.keys(params).forEach(function (value) {\n        data.append(value, params[value] || \"\");\n      });\n      return yield httpClient.post(\"/exec_job_repack_item\", data);\n    });\n    return function execJobRepackItem(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return useMutation(\"ExecJobRepackItem\", function (params) {\n    return execJobRepackItem(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('JobRepackBOM');\n    },\n    onError: function onError(error) {\n      var _error$response, _error$response$data;\n      console.log((error == null ? void 0 : (_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || error.message);\n    }\n  });\n};\nexport var useExecJobRepackTransactions = function useExecJobRepackTransactions() {\n  var queryClient = useQueryClient();\n  var execJobRepackTransactions = function () {\n    var _ref5 = _asyncToGenerator(function* (params) {\n      var data = new FormData();\n      Object.keys(params).forEach(function (value) {\n        data.append(value, params[value] || \"\");\n      });\n      return yield httpClient.post(\"/exec_job_repack_transaction\", data);\n    });\n    return function execJobRepackTransactions(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return useMutation(\"ExecJobRepackTransactions\", function (params) {\n    return execJobRepackTransactions(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('JobRepack');\n    },\n    onError: function onError(error) {\n      var _error$response2, _error$response2$data;\n      console.log((error == null ? void 0 : (_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || error.message);\n    }\n  });\n};\nexport var useUpdateJobRepack = function useUpdateJobRepack() {\n  var queryClient = useQueryClient();\n  var updateJobRepack = function () {\n    var _ref6 = _asyncToGenerator(function* (params) {\n      var data = new FormData();\n      Object.keys(params).forEach(function (value) {\n        data.append(value, params[value] || \"\");\n      });\n      return yield httpClient.post(\"/update_job_repack\", data);\n    });\n    return function updateJobRepack(_x4) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return useMutation(\"UpdateJobRepack\", function (params) {\n    return updateJobRepack(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('JobRepack');\n    },\n    onError: function onError(error) {\n      var _error$response3, _error$response3$data;\n      console.log((error == null ? void 0 : (_error$response3 = error.response) == null ? void 0 : (_error$response3$data = _error$response3.data) == null ? void 0 : _error$response3$data.message) || error.message);\n    }\n  });\n};","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","httpClient","useJobRepack","getJobRepack","_ref","_asyncToGenerator","get","apply","arguments","enabled","refetchOnWindowFocus","refetchOnMount","useJobRepackBOM","_ref2","JOB_ID","getJobRepackBOM","_ref3","_x","useExecJobRepackItem","queryClient","execJobRepackItem","_ref4","params","data","FormData","Object","keys","forEach","value","append","post","_x2","onSuccess","response","invalidateQueries","onError","error","_error$response","_error$response$data","console","log","message","useExecJobRepackTransactions","execJobRepackTransactions","_ref5","_x3","_error$response2","_error$response2$data","useUpdateJobRepack","updateJobRepack","_ref6","_x4","_error$response3","_error$response3$data"],"sources":["D:/_Dev/expo/pk-mobile/src/hooks/useJobRepack.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport { httpClient } from \"../services/axios\";\r\n\r\nexport const useJobRepack = () => {\r\n  const getJobRepack = async () => {\r\n    return await httpClient.get('/job_repack');\r\n  };\r\n  return useQuery(\r\n    \"JobRepack\",\r\n    () => getJobRepack(),\r\n    {\r\n      enabled: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      //staleTime: 30000, // not to refresh the data from API is 30 seconds\r\n    }\r\n  );\r\n};\r\n\r\nexport const useJobRepackBOM = ({JOB_ID}: any) => {\r\n\r\n  const getJobRepackBOM = async (JOB_ID: any) => {\r\n    \r\n    return await httpClient.get(`/job_repack_bom?JOB_ID=${JOB_ID}`);\r\n  };\r\n  return useQuery<any, any, any>(\r\n    [\"JobRepackBOM\", JOB_ID],\r\n    () => getJobRepackBOM(JOB_ID),\r\n    {\r\n      enabled: true,\r\n    }\r\n  );\r\n};\r\n\r\nexport const useExecJobRepackItem = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const execJobRepackItem = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/exec_job_repack_item\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"ExecJobRepackItem\",\r\n    (params) => execJobRepackItem(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('JobRepackBOM');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const useExecJobRepackTransactions = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const execJobRepackTransactions = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/exec_job_repack_transaction\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"ExecJobRepackTransactions\",\r\n    (params) => execJobRepackTransactions(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('JobRepack');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const useUpdateJobRepack = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const updateJobRepack = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/update_job_repack\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"UpdateJobRepack\",\r\n    (params) => updateJobRepack(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('JobRepack');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}