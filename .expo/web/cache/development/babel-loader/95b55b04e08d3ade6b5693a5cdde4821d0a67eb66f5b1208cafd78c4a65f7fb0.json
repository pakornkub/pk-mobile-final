{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { httpClient } from \"../services/axios\";\nexport var useUnlockSP = function useUnlockSP() {\n  var getUnlockSP = function () {\n    var _ref = _asyncToGenerator(function* () {\n      return yield httpClient.get('/unlock_sp');\n    });\n    return function getUnlockSP() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return useQuery(\"UnlockSP\", function () {\n    return getUnlockSP();\n  }, {\n    enabled: true,\n    refetchOnWindowFocus: true,\n    refetchOnMount: true\n  });\n};\nexport var useUpdateUnlockSP = function useUpdateUnlockSP() {\n  var queryClient = useQueryClient();\n  var updateUnlockSP = function () {\n    var _ref2 = _asyncToGenerator(function* (params) {\n      var data = new FormData();\n      Object.keys(params).forEach(function (value) {\n        data.append(value, params[value] || \"\");\n      });\n      return yield httpClient.post(\"/update_unlock_sp\", data);\n    });\n    return function updateUnlockSP(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return useMutation(\"UpdateUnlockSP\", function (params) {\n    return updateUnlockSP(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('UnlockSP');\n    },\n    onError: function onError(error) {\n      var _error$response, _error$response$data;\n      console.log((error == null ? void 0 : (_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || error.message);\n    }\n  });\n};\nexport var useExecUnlockSPTag = function useExecUnlockSPTag() {\n  var queryClient = useQueryClient();\n  var execUnlockSPTag = function () {\n    var _ref3 = _asyncToGenerator(function* (params) {\n      var data = new FormData();\n      Object.keys(params).forEach(function (value) {\n        data.append(value, params[value] || \"\");\n      });\n      return yield httpClient.post(\"/exec_unlock_sp_tag\", data);\n    });\n    return function execUnlockSPTag(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return useMutation(\"ExecUnlockSPTag\", function (params) {\n    return execUnlockSPTag(params);\n  }, {\n    onSuccess: function onSuccess(response) {\n      queryClient.invalidateQueries('ReceiveSPItem');\n    },\n    onError: function onError(error) {\n      var _error$response2, _error$response2$data;\n      console.log((error == null ? void 0 : (_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.message) || error.message);\n    }\n  });\n};","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","httpClient","useUnlockSP","getUnlockSP","_ref","_asyncToGenerator","get","apply","arguments","enabled","refetchOnWindowFocus","refetchOnMount","useUpdateUnlockSP","queryClient","updateUnlockSP","_ref2","params","data","FormData","Object","keys","forEach","value","append","post","_x","onSuccess","response","invalidateQueries","onError","error","_error$response","_error$response$data","console","log","message","useExecUnlockSPTag","execUnlockSPTag","_ref3","_x2","_error$response2","_error$response2$data"],"sources":["D:/_Dev/expo/pk-mobile/src/hooks/useUnlockSP.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from \"react-query\";\r\nimport { httpClient } from \"../services/axios\";\r\n\r\nexport const useUnlockSP = () => {\r\n  const getUnlockSP = async () => {\r\n    return await httpClient.get('/unlock_sp');\r\n  };\r\n  return useQuery(\r\n    \"UnlockSP\",\r\n    () => getUnlockSP(),\r\n    {\r\n      enabled: true,\r\n      refetchOnWindowFocus: true,\r\n      refetchOnMount: true,\r\n      //staleTime: 30000, // not to refresh the data from API is 30 seconds\r\n    }\r\n  );\r\n};\r\n\r\nexport const useUpdateUnlockSP = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const updateUnlockSP = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/update_unlock_sp\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"UpdateUnlockSP\",\r\n    (params) => updateUnlockSP(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('UnlockSP');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const useExecUnlockSPTag = () => {\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const execUnlockSPTag = async (params: any): Promise<any> => {\r\n    let data = new FormData();\r\n\r\n    Object.keys(params).forEach((value) => {\r\n      data.append(value, params[value] || \"\");\r\n    });\r\n\r\n    return await httpClient.post(\"/exec_unlock_sp_tag\", data);\r\n  };\r\n\r\n  return useMutation<any, any, any>(\r\n    \"ExecUnlockSPTag\",\r\n    (params) => execUnlockSPTag(params),\r\n    {\r\n      onSuccess: (response) => {\r\n\r\n        queryClient.invalidateQueries('ReceiveSPItem');\r\n\r\n      },\r\n      onError: (error) => {\r\n\r\n        console.log(error?.response?.data?.message || error.message);\r\n\r\n      },\r\n    }\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}